angular.module("myNetwork",["ui.bootstrap","ui.router","angularUtils.directives.dirPagination","myNetwork.config.stateProvider","myNetwork.config.pusherProvider","myNetwork.constants","myNetwork.filters","myNetwork.auth.service","myNetwork.auth.controller","myNetwork.post.service","myNetwork.post.viewcomments.controller","myNetwork.home.viewposts.controller","myNetwork.home.nav.controller","myNetwork.user.service","myNetwork.user.viewposts.controller","myNetwork.user.find.controller"]),angular.module("myNetwork.auth.controller",[]).controller("AuthCtrl",["$scope","$state","auth","REGEXPS",function(e,t,n,r){e.user={},e.messages={};var s=r.VALID_USER,o=r.VALID_PASSWORD;e.register=function(){e.user.username?s.test(e.user.username)?e.user.password?o.test(e.user.password)?e.user.verifyPass?e.user.password!=e.user.verifyPass?e.messages.error="Mật khẩu chưa khớp!":n.register(e.user).error(function(t){e.messages=t}).then(function(){t.go("home")}):e.messages.error="Bạn chưa nhập lại mật khẩu!":e.messages.error="Mật khẩu cần ít nhất 8 kí tự!":e.messages.error="Bạn chưa nhập mật khẩu (ít nhất 8 kí tự)!":e.messages.error="Tên người dùng từ 5 đến 20 kí tự, không chứa khoảng trắng và kí tự đặc biệt (\\ / ` \" ' # ~)!":e.messages.error="Bạn chưa nhập Tên người dùng!"},e.logIn=function(){e.user.username||e.user.password?n.logIn(e.user).error(function(t){e.messages=t}).then(function(){t.go("home")}):e.messages.error="Bạn chưa nhập tên người dùng hoặc mật khẩu!"},e.changePassword=function(){e.user.username=n.currentUser(),e.user.currentPassword&&e.user.newPassword&&e.user.verifyNewPassword?o.test(e.user.newPassword)?e.user.newPassword!=e.user.verifyNewPassword?e.messages.error="Mật khẩu chưa khớp!":n.changePassword(e.user).error(function(t){e.messages=t}).then(function(){e.messages={},e.user={},e.messages.success="Đã cập nhật mật khẩu!"}):e.messages.error="Mật khẩu cần ít nhất 8 kí tự!":e.messages.error="Bạn chưa nhập tên người dùng hoặc mật khẩu!"}}]),angular.module("myNetwork.auth.service",[]).factory("auth",["$http","$window","$state",function(e,t,n){var r={};return r.saveToken=function(e){t.localStorage["my-social-token"]=e},r.getToken=function(){return t.localStorage["my-social-token"]},r.isLoggedIn=function(){var e=r.getToken();if(e){var n=JSON.parse(t.atob(e.split(".")[1]));return n.exp>Date.now()/1e3}return!1},r.currentUser=function(){if(r.isLoggedIn()){var e=r.getToken(),n=JSON.parse(t.atob(e.split(".")[1]));return n.username}},r.isAdmin=function(){if(r.isLoggedIn()){var e=r.getToken(),n=JSON.parse(t.atob(e.split(".")[1]));return n.isAdmin}},r.register=function(t){return e.post("/users/register",t).success(function(e){r.saveToken(e.token)})},r.logIn=function(t){return e.post("/users/login",t).success(function(e){r.saveToken(e.token)})},r.logOut=function(){t.localStorage.removeItem("my-social-token"),n.go("home")},r.changePassword=function(t){return e.put("/users/changePassword",t).success(function(e){r.saveToken(e.token)})},r}]),angular.module("myNetwork.config.pusherProvider",["doowb.angular-pusher"]).config(["PusherServiceProvider",function(e){e.setToken("864c814b8f54479e5d71").setOptions({})}]),angular.module("myNetwork.config.stateProvider",["ui.router"]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/home",templateUrl:"templates/home.html",controller:"ViewPostsCtrl",resolve:{postPromise:["posts",function(e){return e.getAll()}]}}).state("posts",{url:"/posts/{id}",templateUrl:"templates/posts.html",controller:"ViewCommentsCtrl",resolve:{post:["$stateParams","posts",function(e,t){return t.get(e.id)}]}}).state("login",{url:"/login",templateUrl:"templates/login.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}).state("register",{url:"/register",templateUrl:"templates/register.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}).state("user",{url:"/users/{username}",templateUrl:"templates/user.html",controller:"ViewUserPostsCtrl",onEnter:["$state","$stateParams",function(e,t){t.username||e.go("home")}],resolve:{userPosts:["posts","$stateParams",function(e,t){return e.getPostsByUser(t.username)}]}}).state("findUser",{url:"/findUser",templateUrl:"templates/findUser.html",controller:"FindUserCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}]}).state("listUser",{url:"/listUser",templateUrl:"templates/listUser.html",controller:"FindUserCtrl",resolve:{userPromise:["user",function(e){return e.getAllUser()}]},onEnter:["$state","auth",function(e,t){(!t.isLoggedIn()||t.isLoggedIn()&&!t.isAdmin())&&e.go("home")}]}).state("changePassword",{url:"/changePassword",templateUrl:"templates/changePassword.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}]}),t.otherwise("home")}]),angular.module("myNetwork.constants",[]).constant("REGEXPS",{VALID_LINK_REQUIRED_PROTOCOL:/^((https|http|ftp)\:\/\/)([w|W]{3}\.)?[a-zA-Z0-9\-\.]{3,}\.[a-zA-Z]{2,}(\.[a-zA-Z]{2,})?((\/[a-zA-Z0-9]*)+(\.[a-zA-Z0-9]{2,4}))?/,VALID_LINK_NOT_REQUIRED_PROTOCOL:/^((https|http|ftp)\:\/\/)?([w|W]{3}\.)?[a-zA-Z0-9\-\.]{3,}\.[a-zA-Z]{2,}(\.[a-zA-Z]{2,})?((\/[a-zA-Z0-9]*)+(\.[a-zA-Z0-9]{2,4}))?/,VALID_USER:/^[a-zA-Z0-9_\.]{5,20}$/,VALID_PASSWORD:/^.{8,}$/,VALID_EMAIL:/^[a-zA-Z]+[\.0-9_]+@[a-z0-9]+\.[a-z]{2,4}$/}),angular.module("myNetwork.filters",[]).filter("link",["REGEXPS",function(e){return function(t){var n=e.VALID_LINK_REQUIRED_PROTOCOL;return n.test(t)?t:"https://"+t}}]),angular.module("myNetwork.home.viewposts.controller",[]).controller("ViewPostsCtrl",["$scope","$window","posts","auth","REGEXPS","Pusher",function(e,t,n,r,s,o){e.isLoggedIn=r.isLoggedIn,e.currentUser=r.currentUser,e.logOut=r.logOut,e.isAdmin=r.isAdmin,e.allposts=n.posts,e.sortOrder="-date",e.sortOptions=[{name:"Mới nhất",order:"-date"},{name:"Nhiều like nhất",order:"-usersLiked.length"},{name:"Nhiều bình luận nhất",order:"-comments.length"}],e.postsPerPage=10,e.currentPage=1,e.error="",e.editing={},e.currentLike=!1;var i=s.VALID_LINK_NOT_REQUIRED_PROTOCOL;e.setOrder=function(t){e.sortOrder=t},e.addPost=function(){e.newtitle?e.newlink&&!i.test(e.newlink)?e.error="Link không hợp lệ!":(n.create({title:e.newtitle,link:e.newlink,date:new Date}),e.newtitle="",e.newlink="",e.error=""):e.error="Bạn chưa nhập nội dung!"},e.moveToTop=function(){t.scrollTo(0,0)},e.like_unlike=function(e){if(r.isLoggedIn()){var t=r.currentUser();-1===e.usersLiked.indexOf(t)?n.like(e):n.unlike(e)}},e.dislike_undislike=function(e){if(r.isLoggedIn()){var t=r.currentUser();-1===e.usersDisliked.indexOf(t)?n.dislike(e):n.undislike(e)}},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Đăng nhập để thích bài viết!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Đăng nhập để không thích bài viết!"},e.edit=function(t){e.editing.current=[t,!0],e.title=e.editing.current[0].title,e.link=e.editing.current[0].link,e.moveToTop()},e.save=function(){if(e.title||e.link)if(e.title)if(e.link&&!i.test(e.link))e.error="Link không hợp lệ!";else{var r={_id:e.editing.current[0]._id,title:e.title,link:e.link,date:new Date};n.save(r),e.editing={},e.error=""}else e.error="Bạn chưa nhập nội dung!";else t.confirm("Có phải bạn muốn xóa bài viết này?")&&(n["delete"](e.editing.current[0]),e.editing={},e.error="")},e.reset=function(){e.editing={}},e["delete"]=function(e){t.confirm("Bạn có chắc chắn muốn xóa không?")&&n["delete"](e)}}]),angular.module("myNetwork.home.nav.controller",[]).controller("NavCtrl",["$scope","auth",function(e,t){e.isLoggedIn=t.isLoggedIn,e.currentUser=t.currentUser,e.logOut=t.logOut}]),angular.module("myNetwork.post.viewcomments.controller",[]).controller("ViewCommentsCtrl",["$scope","posts","post","auth","$window","Pusher",function(e,t,n,r,s,o){e.post=n,e.error="",e.button={name:"Comment"},e.currentComment={},e.currentUser=r.currentUser,e.currentPage=1,e.isLoggedIn=r.isLoggedIn,e.isAdmin=r.isAdmin,o.subscribe(e.post._id.toString(),"addComment",function(t){e.post.comments.splice(0,0,t)}),o.subscribe(e.post._id.toString(),"saveComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t._id);e.post.comments[n]=t}),o.subscribe("comments","deleteComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t.comment);e.post.comments.splice(n,1)}),o.subscribe(e.post._id.toString(),"likeComment",function(t){var n=e.post.comments.map(function(e){return e._id}),r=n.indexOf(t.comment._id);e.post.comments[r].usersLiked.push(t.user)}),o.subscribe(e.post._id.toString(),"unlikeComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t.comment._id),r=e.post.comments[n].usersLiked.indexOf(t.user);e.post.comments[n].usersLiked.splice(r,1)}),o.subscribe(e.post._id.toString(),"dislikeComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t.comment._id);e.post.comments[n].usersDisliked.push(t.user)}),o.subscribe(e.post._id.toString(),"undislikeComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t.comment._id),r=e.post.comments[n].usersDisliked.indexOf(t.user);e.post.comments[n].usersDisliked.splice(r,1)}),e.addComment=function(){e.body?(t.addComment(n._id,{body:e.body,date:new Date}),e.error=null):e.error="Bạn chưa nhập nội dung bình luận!",e.body=""},e.like_unlikeComment=function(e,n){var s=r.currentUser();-1===n.usersLiked.indexOf(s)?t.likeComment(e,n):t.unlikeComment(e,n)},e.dislike_undislikeComment=function(e,n){var s=r.currentUser();-1===n.usersDisliked.indexOf(s)?t.dislikeComment(e,n):t.undislikeComment(e,n)},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Đăng nhập để thích bình luận!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Đăng nhập để không thích bình luận!"},e.deleteComment=function(e,n){s.confirm("Bạn có chắc chắn muốn xóa không?")&&t.deleteComment(e,n)},e.editComment=function(t,n){e.button.name="Save",e.body=n.body,e.currentComment=n;var r=angular.element(document.body.scrollHeight).toString(),o=parseInt(r.substr(1,r.length-2));s.scrollTo(0,o),document.querySelector("#commentInput").select()},e.save=function(n,r){e.body?t.saveComment(n,{_id:e.currentComment._id,body:e.body,date:new Date}):s.confirm("Bạn có chắc chắn muốn xóa không?")&&t.deleteComment(n,e.currentComment),e.button.name="Comment",e.body=""},e.reset=function(){e.body="",e.button.name="Comment"},e.moveToTop=function(){s.scrollTo(0,0)}}]),angular.module("myNetwork.post.service",[]).factory("posts",["$http","auth","Pusher","$state",function(e,t,n,r){var s={posts:[]};return n.subscribe("posts","addPost",function(e){s.posts.splice(0,0,e)}),n.subscribe("posts","savePost",function(e){var t=s.getAllPostIds().indexOf(e._id);s.posts[t]=e,r.go("home")}),n.subscribe("posts","deletePost",function(e){var t=s.getAllPostIds().indexOf(e.post);s.posts.splice(t,1),r.go("home")}),n.subscribe("posts","likePost",function(e){var t=s.getAllPostIds().indexOf(e.post._id);s.posts[t].usersLiked.push(e.username)}),n.subscribe("posts","unlikePost",function(e){var t=s.getAllPostIds().indexOf(e.post._id),n=s.posts[t].usersLiked.indexOf(e.username);s.posts[t].usersLiked.splice(n,1)}),n.subscribe("posts","dislikePost",function(e){var t=s.getAllPostIds().indexOf(e.post._id);s.posts[t].usersDisliked.push(e.username)}),n.subscribe("posts","undislikePost",function(e){var t=s.getAllPostIds().indexOf(e.post._id),n=s.posts[t].usersLiked.indexOf(e.username);s.posts[t].usersDisliked.splice(n,1)}),s.getAll=function(){return e.get("/posts").success(function(e){angular.copy(e,s.posts)})},s.getPostsByUser=function(t){return e.get("/posts/user/"+t).then(function(e){return e.data})},s.getAllPostIds=function(){return s.posts.map(function(e){return e._id})},s.create=function(n){return e.post("/posts",n,{headers:{Authorization:"Bearer "+t.getToken()}})},s.get=function(t){return e.get("/posts/"+t).then(function(e){return e.data})},s.addComment=function(n,r){return e.post("/posts/"+n+"/comments",r,{headers:{Authorization:"Bearer "+t.getToken()}})},s.like=function(n){return e.put("/posts/"+n._id+"/like",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.unlike=function(n){return e.put("/posts/"+n._id+"/unlike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.dislike=function(n){return e.put("/posts/"+n._id+"/dislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.undislike=function(n){return e.put("/posts/"+n._id+"/undislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.save=function(n){return e.put("/posts/"+n._id+"/save",n,{headers:{Authorization:"Bearer "+t.getToken()}})},s.saveComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/save",r,{headers:{Authorization:"Bearer "+t.getToken()}})},s["delete"]=function(n){return e["delete"]("/posts/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.deleteComment=function(n,r){return e["delete"]("/posts/"+n._id+"/comments/"+r._id,null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.likeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/like",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.unlikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/unlike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.dislikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/dislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s.undislikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/undislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},s}]),angular.module("myNetwork.user.find.controller",[]).controller("FindUserCtrl",["$scope","user","$state","$window",function(e,t,n,r){e.users=t.users,e.messages={},e.findUser=function(e){return t.findUser(e).then(function(e){return e.data.map(function(e){return e.username})})},e["goto"]=function(t){t?n.go("user",{username:t}):e.messages.error="Bạn chưa nhập tên người dùng cần tìm!"},e.deleteUser=function(e){r.confirm("Bạn có chắc chắn muốn xóa người dùng này ra khỏi hệ thống?")&&t.deleteUser(e)}}]),angular.module("myNetwork.user.viewposts.controller",[]).controller("ViewUserPostsCtrl",["$scope","$stateParams","$state","auth","posts","userPosts","$window","REGEXPS",function(e,t,n,r,s,o,i,u){e.isLoggedIn=r.isLoggedIn,e.currentUser=r.currentUser,e.logOut=r.logOut,e.allposts=o,e.username=t.username,e.currentPage=1,e.postsPerPage=10,e.editing={};var l=u.VALID_LINK_NOT_REQUIRED_PROTOCOL;e.like_unlike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersLiked.indexOf(t))s.like(e),e.usersLiked.push(t),e.points+=2;else{s.unlike(e);var n=e.usersLiked.indexOf(t);e.usersLiked.splice(n,1),e.points-=2}}},e.dislike_undislike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersDisliked.indexOf(t))s.dislike(e),e.usersDisliked.push(t),e.points--;else{s.undislike(e);var n=e.usersDisliked.indexOf(t);e.usersDisliked.splice(n,1),e.points++}}},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Bạn cần đăng nhập!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Bạn cần đăng nhập!"},e.edit=function(t){e.editing.current=[t,!0],e.title=e.editing.current[0].title,e.link=e.editing.current[0].link,i.scrollTo(0,0)},e.save=function(){if(e.title||e.link)if(e.title)if(e.link&&!l.test(e.link))e.error="Link không hợp lệ!";else{var t={_id:e.editing.current[0]._id,title:e.title,link:e.link,date:new Date};s.save(t);var n=e.allposts.map(function(e){return e._id}).indexOf(e.editing.current[0]._id);e.allposts[n].title=t.title,e.allposts[n].link=t.link,e.allposts[n].date=t.date,e.editing={},e.error=""}else e.error="Bạn chưa nhập nội dung!";else i.confirm("Bạn có chắc chắn muốn xóa không?")&&(s["delete"](e.editing.current[0]),e.editing={},e.error="")},e.reset=function(){e.editing={}},e["delete"]=function(t){if(i.confirm("Có phải bạn muốn xóa bài viết này?")){s["delete"](t);var n=e.allposts.map(function(e){return e._id}).indexOf(t._id);e.allposts.splice(n,1)}}}]),angular.module("myNetwork.user.service",[]).factory("user",["$http","auth",function(e,t){var n={users:[]};return n.findUser=function(t){return e({method:"GET",url:"/users/findUser/"+t})},n.getAllUser=function(){return e({method:"GET",url:"/users/all"}).success(function(e){angular.copy(e,n.users)})},n.deleteUser=function(r){var s=n.users.map(function(e){return e.username}).indexOf(r.username);return n.users.splice(s,1),e["delete"]("/users/delete/"+r.username,null,{headers:{Authorization:"Bearer "+t.getToken()}})},n}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuZ3VsYXJBcHAuanMiLCJhdXRoQ29udHJvbGxlci5qcyIsImF1dGhTZXJ2aWNlLmpzIiwicHVzaGVyUHJvdmlkZXIuanMiLCJzdGF0ZVByb3ZpZGVyLmpzIiwiY29uc3RhbnRzLmpzIiwiZmlsdGVycy5qcyIsIm1haW5Db250cm9sbGVyLmpzIiwibmF2Q29udHJvbGxlci5qcyIsInBvc3RDb250cm9sbGVyLmpzIiwicG9zdFNlcnZpY2UuanMiLCJmaW5kVXNlckNvbnRyb2xsZXIuanMiLCJ1c2VyQ29udHJvbGxlci5qcyIsInVzZXJTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJHN0YXRlIiwiYXV0aCIsInJlZ2V4IiwidXNlciIsIm1lc3NhZ2VzIiwiVVNFUl9SRUdFWCIsIlZBTElEX1VTRVIiLCJQQVNTX1JFR0VYIiwiVkFMSURfUEFTU1dPUkQiLCJyZWdpc3RlciIsInVzZXJuYW1lIiwidGVzdCIsInBhc3N3b3JkIiwidmVyaWZ5UGFzcyIsImVycm9yIiwiZXJyIiwidGhlbiIsImdvIiwibG9nSW4iLCJjaGFuZ2VQYXNzd29yZCIsImN1cnJlbnRVc2VyIiwiY3VycmVudFBhc3N3b3JkIiwibmV3UGFzc3dvcmQiLCJ2ZXJpZnlOZXdQYXNzd29yZCIsInN1Y2Nlc3MiLCJmYWN0b3J5IiwiJGh0dHAiLCIkd2luZG93IiwiYXV0aFNlcnZpY2UiLCJzYXZlVG9rZW4iLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldFRva2VuIiwiaXNMb2dnZWRJbiIsInBheWxvYWQiLCJKU09OIiwicGFyc2UiLCJhdG9iIiwic3BsaXQiLCJleHAiLCJEYXRlIiwibm93IiwiaXNBZG1pbiIsInBvc3QiLCJkYXRhIiwibG9nT3V0IiwicmVtb3ZlSXRlbSIsInB1dCIsImNvbmZpZyIsIlB1c2hlclNlcnZpY2VQcm92aWRlciIsInNldFRva2VuIiwic2V0T3B0aW9ucyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwic3RhdGUiLCJ1cmwiLCJ0ZW1wbGF0ZVVybCIsInJlc29sdmUiLCJwb3N0UHJvbWlzZSIsInBvc3RzIiwiZ2V0QWxsIiwiJHN0YXRlUGFyYW1zIiwiZ2V0IiwiaWQiLCJvbkVudGVyIiwidXNlclBvc3RzIiwiZ2V0UG9zdHNCeVVzZXIiLCJ1c2VyUHJvbWlzZSIsImdldEFsbFVzZXIiLCJvdGhlcndpc2UiLCJjb25zdGFudCIsIlZBTElEX0xJTktfUkVRVUlSRURfUFJPVE9DT0wiLCJWQUxJRF9MSU5LX05PVF9SRVFVSVJFRF9QUk9UT0NPTCIsIlZBTElEX0VNQUlMIiwiZmlsdGVyIiwibGluayIsIlZBTElEX0xJTksiLCJQdXNoZXIiLCJhbGxwb3N0cyIsInNvcnRPcmRlciIsInNvcnRPcHRpb25zIiwibmFtZSIsIm9yZGVyIiwicG9zdHNQZXJQYWdlIiwiY3VycmVudFBhZ2UiLCJlZGl0aW5nIiwiY3VycmVudExpa2UiLCJzZXRPcmRlciIsImFkZFBvc3QiLCJuZXd0aXRsZSIsIm5ld2xpbmsiLCJjcmVhdGUiLCJ0aXRsZSIsImRhdGUiLCJtb3ZlVG9Ub3AiLCJzY3JvbGxUbyIsImxpa2VfdW5saWtlIiwidXNlcnNMaWtlZCIsImluZGV4T2YiLCJsaWtlIiwidW5saWtlIiwiZGlzbGlrZV91bmRpc2xpa2UiLCJ1c2Vyc0Rpc2xpa2VkIiwiZGlzbGlrZSIsInVuZGlzbGlrZSIsImxpa2VUb29sdGlwVGV4dCIsImRpc2xpa2VUb29sdGlwVGV4dCIsImVkaXQiLCJjdXJyZW50Iiwic2F2ZSIsInVwZGF0ZWRQb3N0IiwiX2lkIiwiY29uZmlybSIsInJlc2V0IiwiYnV0dG9uIiwiY3VycmVudENvbW1lbnQiLCJzdWJzY3JpYmUiLCJ0b1N0cmluZyIsImNvbW1lbnQiLCJjb21tZW50cyIsInNwbGljZSIsImNvbW1lbnRJbmRleCIsIm1hcCIsIml0ZW0iLCJpbmRleCIsImNvbW1lbnRJZHMiLCJwdXNoIiwidXNlckluZGV4IiwiYWRkQ29tbWVudCIsImJvZHkiLCJsaWtlX3VubGlrZUNvbW1lbnQiLCJsaWtlQ29tbWVudCIsInVubGlrZUNvbW1lbnQiLCJkaXNsaWtlX3VuZGlzbGlrZUNvbW1lbnQiLCJkaXNsaWtlQ29tbWVudCIsInVuZGlzbGlrZUNvbW1lbnQiLCJkZWxldGVDb21tZW50IiwiZWRpdENvbW1lbnQiLCJoZWlnaHRTdHIiLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJzY3JvbGxIZWlnaHQiLCJoZWlnaHQiLCJwYXJzZUludCIsInN1YnN0ciIsImxlbmd0aCIsInF1ZXJ5U2VsZWN0b3IiLCJzZWxlY3QiLCJzYXZlQ29tbWVudCIsInBvc3RTZXJ2aWNlIiwicG9zdEluZGV4IiwiZ2V0QWxsUG9zdElkcyIsInVzckluZGV4IiwiY29weSIsInJlc3BvbnNlIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJyZXMiLCJ1c2VycyIsImZpbmRVc2VyIiwidXNyIiwiZGVsZXRlVXNlciIsInBvaW50cyIsInVzZXJTZXJ2aWNlIiwibWV0aG9kIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxhQUNBLGVBQ0EsWUFDQSx3Q0FDQSxpQ0FDQSxrQ0FDQSxzQkFDQSxvQkFDQSx5QkFDQSw0QkFDQSx5QkFDQSx5Q0FDQSxzQ0FDQSxnQ0FDQSx5QkFDQSxzQ0FDQSxtQ0NoQkFELFFBQUFDLE9BQUEsZ0NBQ0FDLFdBQUEsWUFBQSxTQUFBLFNBQUEsT0FBQSxVQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FILEVBQUFJLFFBQ0FKLEVBQUFLLFdBQ0EsSUFBQUMsR0FBQUgsRUFBQUksV0FDQUMsRUFBQUwsRUFBQU0sY0FFQVQsR0FBQVUsU0FBQSxXQUNBVixFQUFBSSxLQUFBTyxTQUdBTCxFQUFBTSxLQUFBWixFQUFBSSxLQUFBTyxVQUdBWCxFQUFBSSxLQUFBUyxTQUdBTCxFQUFBSSxLQUFBWixFQUFBSSxLQUFBUyxVQUdBYixFQUFBSSxLQUFBVSxXQUdBZCxFQUFBSSxLQUFBUyxVQUFBYixFQUFBSSxLQUFBVSxXQUNBZCxFQUFBSyxTQUFBVSxNQUFBLHNCQUdBYixF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V0FDQXdGLFFBQUE4RCxFQUFBdEosU0FHQSxPQUZBeUosR0FBQUwsTUFBQXRDLE9BQUFJLEVBQUEsR0FFQWxHLEVBQUFBLFVBQUEsaUJBQUFzSSxFQUFBdEosU0FBQSxNQUNBaUosU0FBQUMsY0FBQSxVQUFBM0osRUFBQStCLGVBS0FtSSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZShcIm15TmV0d29ya1wiLCBbXHJcblx0J3VpLmJvb3RzdHJhcCcsXHJcblx0J3VpLnJvdXRlcicsXHJcblx0XCJhbmd1bGFyVXRpbHMuZGlyZWN0aXZlcy5kaXJQYWdpbmF0aW9uXCIsXHJcblx0XCJteU5ldHdvcmsuY29uZmlnLnN0YXRlUHJvdmlkZXJcIixcclxuXHRcIm15TmV0d29yay5jb25maWcucHVzaGVyUHJvdmlkZXJcIixcclxuXHRcIm15TmV0d29yay5jb25zdGFudHNcIixcclxuXHRcIm15TmV0d29yay5maWx0ZXJzXCIsXHJcblx0XCJteU5ldHdvcmsuYXV0aC5zZXJ2aWNlXCIsXHJcblx0XCJteU5ldHdvcmsuYXV0aC5jb250cm9sbGVyXCIsXHJcblx0XCJteU5ldHdvcmsucG9zdC5zZXJ2aWNlXCIsXHJcblx0XCJteU5ldHdvcmsucG9zdC52aWV3Y29tbWVudHMuY29udHJvbGxlclwiLFxyXG5cdFwibXlOZXR3b3JrLmhvbWUudmlld3Bvc3RzLmNvbnRyb2xsZXJcIixcclxuXHRcIm15TmV0d29yay5ob21lLm5hdi5jb250cm9sbGVyXCIsXHJcblx0XCJteU5ldHdvcmsudXNlci5zZXJ2aWNlXCIsXHJcblx0XCJteU5ldHdvcmsudXNlci52aWV3cG9zdHMuY29udHJvbGxlclwiLFxyXG5cdFwibXlOZXR3b3JrLnVzZXIuZmluZC5jb250cm9sbGVyXCJcclxuXHRdKTtcclxuXHRcclxuXHRcclxuXHJcblx0XHJcblxyXG5cdFxyXG5cclxuXHRcclxuXHJcblx0XHJcblxyXG5cdCIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLmF1dGguY29udHJvbGxlclwiLCBbXSlcclxuXHQuY29udHJvbGxlcignQXV0aEN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLCAnYXV0aCcsICdSRUdFWFBTJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsIGF1dGgsIHJlZ2V4KXtcclxuXHRcdCRzY29wZS51c2VyID0ge307XHJcblx0XHQkc2NvcGUubWVzc2FnZXMgPSB7fTtcclxuICAgICAgdmFyIFVTRVJfUkVHRVggPSByZWdleC5WQUxJRF9VU0VSO1xyXG4gICAgICB2YXIgUEFTU19SRUdFWCA9IHJlZ2V4LlZBTElEX1BBU1NXT1JEO1xyXG5cclxuXHRcdCRzY29wZS5yZWdpc3RlciA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgIGlmICghJHNjb3BlLnVzZXIudXNlcm5hbWUpIHtcclxuICAgICAgICAgXHQkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSBcIkLhuqFuIGNoxrBhIG5o4bqtcCBUw6puIG5nxrDhu51pIGTDuW5nIVwiO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIGlmICghVVNFUl9SRUdFWC50ZXN0KCRzY29wZS51c2VyLnVzZXJuYW1lKSkge1xyXG4gICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSBcIlTDqm4gbmfGsOG7nWkgZMO5bmcgdOG7qyA1IMSR4bq/biAyMCBrw60gdOG7sSwga2jDtG5nIGNo4bupYSBraG/huqNuZyB0cuG6r25nIHbDoCBrw60gdOG7sSDEkeG6t2MgYmnhu4d0IChcXFxcIC8gYCBcXFwiICcgIyB+KSFcIjtcclxuICAgICAgICAgfSBcclxuICAgICAgICAgZWxzZSBpZiAoISRzY29wZS51c2VyLnBhc3N3b3JkKSB7XHJcbiAgICAgICAgIFx0JHNjb3BlLm1lc3NhZ2VzLmVycm9yID0gXCJC4bqhbiBjaMawYSBuaOG6rXAgbeG6rXQga2jhuql1ICjDrXQgbmjhuqV0IDgga8OtIHThu7EpIVwiO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIGlmICghUEFTU19SRUdFWC50ZXN0KCRzY29wZS51c2VyLnBhc3N3b3JkKSkge1xyXG4gICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSBcIk3huq10IGto4bqpdSBj4bqnbiDDrXQgbmjhuqV0IDgga8OtIHThu7EhXCI7XHJcbiAgICAgICAgIH0gXHJcbiAgICAgICAgIGVsc2UgaWYgKCEkc2NvcGUudXNlci52ZXJpZnlQYXNzKSB7XHJcbiAgICAgICAgIFx0JHNjb3BlLm1lc3NhZ2VzLmVycm9yID0gXCJC4bqhbiBjaMawYSBuaOG6rXAgbOG6oWkgbeG6rXQga2jhuql1IVwiO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIGlmICgkc2NvcGUudXNlci5wYXNzd29yZCAhPSAkc2NvcGUudXNlci52ZXJpZnlQYXNzKSB7XHJcbiAgICAgICAgICAgICRzY29wZS5tZXNzYWdlcy5lcnJvciA9IFwiTeG6rXQga2jhuql1IGNoxrBhIGto4bubcCFcIjtcclxuICAgICAgICAgfSBcclxuICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGF1dGhcclxuICAgICAgICAgXHRcdC5yZWdpc3Rlcigkc2NvcGUudXNlcilcclxuICAgICAgICAgXHRcdC5lcnJvcihmdW5jdGlvbihlcnIpe1xyXG4gICAgICAgICBcdFx0XHQkc2NvcGUubWVzc2FnZXMgPSBlcnI7XHJcbiAgICAgICAgIFx0XHR9KVxyXG4gICAgICAgICBcdFx0LnRoZW4oZnVuY3Rpb24oKXtcclxuXHQgICAgICAgICBcdFx0JHN0YXRlLmdvKFwiaG9tZVwiKTtcclxuXHQgICAgICAgICBcdH0pO1xyXG4gICAgICAgICB9XHJcblxyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0JHNjb3BlLmxvZ0luID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0aWYgKCEkc2NvcGUudXNlci51c2VybmFtZSAmJiAhJHNjb3BlLnVzZXIucGFzc3dvcmQpIHtcclxuXHRcdFx0XHQkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSBcIkLhuqFuIGNoxrBhIG5o4bqtcCB0w6puIG5nxrDhu51pIGTDuW5nIGhv4bq3YyBt4bqtdCBraOG6qXUhXCI7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0YXV0aFxyXG5cdFx0XHRcdFx0LmxvZ0luKCRzY29wZS51c2VyKVxyXG5cdFx0XHRcdFx0LmVycm9yKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHRcdCRzY29wZS5tZXNzYWdlcyA9IGVycjtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHQudGhlbihmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUnKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuICAgICAgJHNjb3BlLmNoYW5nZVBhc3N3b3JkID0gZnVuY3Rpb24oKXtcclxuICAgICAgICAgJHNjb3BlLnVzZXIudXNlcm5hbWUgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcbiAgICAgICAgIGlmICghJHNjb3BlLnVzZXIuY3VycmVudFBhc3N3b3JkIHx8ICEkc2NvcGUudXNlci5uZXdQYXNzd29yZCB8fCAhJHNjb3BlLnVzZXIudmVyaWZ5TmV3UGFzc3dvcmQpIHtcclxuICAgICAgICAgICAgJHNjb3BlLm1lc3NhZ2VzLmVycm9yID0gJ0LhuqFuIGNoxrBhIG5o4bqtcCB0w6puIG5nxrDhu51pIGTDuW5nIGhv4bq3YyBt4bqtdCBraOG6qXUhJztcclxuICAgICAgICAgfVxyXG4gICAgICAgICBlbHNlIGlmICghUEFTU19SRUdFWC50ZXN0KCRzY29wZS51c2VyLm5ld1Bhc3N3b3JkKSkge1xyXG4gICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSAnTeG6rXQga2jhuql1IGPhuqduIMOtdCBuaOG6pXQgOCBrw60gdOG7sSEnO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIGlmICgkc2NvcGUudXNlci5uZXdQYXNzd29yZCAhPSAkc2NvcGUudXNlci52ZXJpZnlOZXdQYXNzd29yZCkge1xyXG4gICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMuZXJyb3IgPSAnTeG6rXQga2jhuql1IGNoxrBhIGto4bubcCEnO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgYXV0aFxyXG4gICAgICAgICAgICAgICAuY2hhbmdlUGFzc3dvcmQoJHNjb3BlLnVzZXIpXHJcbiAgICAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpe1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMgPSBlcnI7XHJcbiAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5tZXNzYWdlcyA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUudXNlciA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUubWVzc2FnZXMuc3VjY2VzcyA9IFwixJDDoyBj4bqtcCBuaOG6rXQgbeG6rXQga2jhuql1IVwiO1xyXG4gICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgfVxyXG4gICAgICAgICBcclxuICAgICAgfTtcclxuXHR9XSk7IiwiYW5ndWxhci5tb2R1bGUoXCJteU5ldHdvcmsuYXV0aC5zZXJ2aWNlXCIsIFtdKVxyXG5cdC5mYWN0b3J5KCdhdXRoJywgWyckaHR0cCcsICckd2luZG93JywgJyRzdGF0ZScsIGZ1bmN0aW9uKCRodHRwLCAkd2luZG93LCAkc3RhdGUpe1xyXG5cdFx0dmFyIGF1dGhTZXJ2aWNlID0ge307XHJcblx0XHRcclxuXHRcdGF1dGhTZXJ2aWNlLnNhdmVUb2tlbiA9IGZ1bmN0aW9uKHRva2VuKXtcclxuXHRcdFx0JHdpbmRvdy5sb2NhbFN0b3JhZ2VbJ215LXNvY2lhbC10b2tlbiddID0gdG9rZW47XHJcblx0XHR9O1xyXG5cclxuXHRcdGF1dGhTZXJ2aWNlLmdldFRva2VuID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0cmV0dXJuICR3aW5kb3cubG9jYWxTdG9yYWdlWydteS1zb2NpYWwtdG9rZW4nXTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdGF1dGhTZXJ2aWNlLmlzTG9nZ2VkSW4gPSBmdW5jdGlvbigpe1xyXG5cdFx0XHR2YXIgdG9rZW4gPSBhdXRoU2VydmljZS5nZXRUb2tlbigpO1xyXG5cclxuXHRcdFx0aWYgKHRva2VuKSB7XHJcblx0XHRcdFx0dmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKCR3aW5kb3cuYXRvYih0b2tlbi5zcGxpdCgnLicpWzFdKSk7XHJcblx0XHRcdFx0cmV0dXJuIChwYXlsb2FkLmV4cCA+IERhdGUubm93KCkvMTAwMCk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdGF1dGhTZXJ2aWNlLmN1cnJlbnRVc2VyID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0aWYgKGF1dGhTZXJ2aWNlLmlzTG9nZ2VkSW4oKSkge1xyXG5cdFx0XHRcdHZhciB0b2tlbiA9IGF1dGhTZXJ2aWNlLmdldFRva2VuKCk7XHJcblx0XHRcdFx0dmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKCR3aW5kb3cuYXRvYih0b2tlbi5zcGxpdCgnLicpWzFdKSk7XHJcblx0XHRcdFx0cmV0dXJuIHBheWxvYWQudXNlcm5hbWU7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0YXV0aFNlcnZpY2UuaXNBZG1pbiA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdGlmIChhdXRoU2VydmljZS5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHR2YXIgdG9rZW4gPSBhdXRoU2VydmljZS5nZXRUb2tlbigpO1xyXG5cdFx0XHRcdHZhciBwYXlsb2FkID0gSlNPTi5wYXJzZSgkd2luZG93LmF0b2IodG9rZW4uc3BsaXQoJy4nKVsxXSkpO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHJldHVybiBwYXlsb2FkLmlzQWRtaW47XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0YXV0aFNlcnZpY2UucmVnaXN0ZXIgPSBmdW5jdGlvbih1c2VyKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KCcvdXNlcnMvcmVnaXN0ZXInLCB1c2VyKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHRcdGF1dGhTZXJ2aWNlLnNhdmVUb2tlbihkYXRhLnRva2VuKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0XHRhdXRoU2VydmljZS5sb2dJbiA9IGZ1bmN0aW9uKHVzZXIpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoJy91c2Vycy9sb2dpbicsIHVzZXIpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdFx0YXV0aFNlcnZpY2Uuc2F2ZVRva2VuKGRhdGEudG9rZW4pO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0YXV0aFNlcnZpY2UubG9nT3V0ID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0JHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnbXktc29jaWFsLXRva2VuJyk7XHJcblx0XHRcdCRzdGF0ZS5nbygnaG9tZScpO1xyXG5cdFx0fTtcclxuXHJcblx0XHRhdXRoU2VydmljZS5jaGFuZ2VQYXNzd29yZCA9IGZ1bmN0aW9uKHVzZXIpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnB1dCgnL3VzZXJzL2NoYW5nZVBhc3N3b3JkJywgdXNlcikuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0XHRhdXRoU2VydmljZS5zYXZlVG9rZW4oZGF0YS50b2tlbik7XHJcblx0XHRcdFx0Ly8gY29uc29sZS5sb2coZGF0YS50b2tlbik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRyZXR1cm4gYXV0aFNlcnZpY2U7XHJcblx0fV0pOyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLmNvbmZpZy5wdXNoZXJQcm92aWRlclwiLCBbJ2Rvb3diLmFuZ3VsYXItcHVzaGVyJ10pXHJcblx0LmNvbmZpZyhbJ1B1c2hlclNlcnZpY2VQcm92aWRlcicsIGZ1bmN0aW9uKFB1c2hlclNlcnZpY2VQcm92aWRlcikge1xyXG5cdFx0UHVzaGVyU2VydmljZVByb3ZpZGVyXHJcblx0XHRcdC5zZXRUb2tlbignODY0YzgxNGI4ZjU0NDc5ZTVkNzEnKVxyXG5cdFx0XHQuc2V0T3B0aW9ucyh7fSk7XHJcblx0fV0pOyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLmNvbmZpZy5zdGF0ZVByb3ZpZGVyXCIsIFsndWkucm91dGVyJ10pXHJcblx0LmNvbmZpZyhbXCIkc3RhdGVQcm92aWRlclwiLCBcIiR1cmxSb3V0ZXJQcm92aWRlclwiLCBmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKXtcclxuXHRcdCRzdGF0ZVByb3ZpZGVyXHJcblx0XHRcdC5zdGF0ZSgnaG9tZScsIHtcclxuXHRcdFx0XHR1cmw6IFwiL2hvbWVcIixcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvaG9tZS5odG1sXCIsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogXCJWaWV3UG9zdHNDdHJsXCIsXHJcblx0XHRcdFx0XHJcblx0XHRcdFx0cmVzb2x2ZToge1xyXG5cdFx0XHRcdFx0cG9zdFByb21pc2U6IFsncG9zdHMnLCBmdW5jdGlvbihwb3N0cyl7XHJcblx0XHRcdFx0XHRcdHJldHVybiBwb3N0cy5nZXRBbGwoKTtcclxuXHRcdFx0XHRcdH1dXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cclxuXHRcdFx0XHJcblx0XHRcdC5zdGF0ZSgncG9zdHMnLCB7XHJcblx0XHRcdFx0dXJsOiBcIi9wb3N0cy97aWR9XCIsXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6IFwidGVtcGxhdGVzL3Bvc3RzLmh0bWxcIixcclxuXHRcdFx0XHRjb250cm9sbGVyOiBcIlZpZXdDb21tZW50c0N0cmxcIixcclxuXHRcdFx0XHRyZXNvbHZlOiB7XHJcblx0XHRcdFx0XHRwb3N0OiBbJyRzdGF0ZVBhcmFtcycsICdwb3N0cycsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgcG9zdHMpe1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gcG9zdHMuZ2V0KCRzdGF0ZVBhcmFtcy5pZCk7XHJcblx0XHRcdFx0XHR9XVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHJcblx0XHRcdC5zdGF0ZSgnbG9naW4nLCB7XHJcblx0XHRcdFx0dXJsOiBcIi9sb2dpblwiLFxyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAndGVtcGxhdGVzL2xvZ2luLmh0bWwnLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdBdXRoQ3RybCcsXHJcblx0XHRcdFx0b25FbnRlcjogWyckc3RhdGUnLCAnYXV0aCcsIGZ1bmN0aW9uKCRzdGF0ZSwgYXV0aCl7XHJcblx0XHRcdFx0XHRpZiAoYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHRcdFx0JHN0YXRlLmdvKCdob21lJyk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fV1cclxuXHRcdFx0fSlcclxuXHJcblx0XHRcdC5zdGF0ZSgncmVnaXN0ZXInLCB7XHJcblx0XHRcdFx0dXJsOiAnL3JlZ2lzdGVyJywgXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvcmVnaXN0ZXIuaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ0F1dGhDdHJsJyxcclxuXHRcdFx0XHRvbkVudGVyOiBbJyRzdGF0ZScsICdhdXRoJywgZnVuY3Rpb24oJHN0YXRlLCBhdXRoKXtcclxuXHRcdFx0XHRcdGlmIChhdXRoLmlzTG9nZ2VkSW4oKSkge1xyXG5cdFx0XHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUnKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XVxyXG5cdFx0XHR9KVxyXG5cclxuXHRcdFx0LnN0YXRlKCd1c2VyJywge1xyXG5cdFx0XHRcdHVybDogJy91c2Vycy97dXNlcm5hbWV9JyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy91c2VyLmh0bWwnLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdWaWV3VXNlclBvc3RzQ3RybCcsXHJcblx0XHRcdFx0b25FbnRlcjogW1wiJHN0YXRlXCIsICckc3RhdGVQYXJhbXMnLCBmdW5jdGlvbigkc3RhdGUsICRzdGF0ZVBhcmFtcyl7XHJcblx0XHRcdFx0XHRpZiAoISRzdGF0ZVBhcmFtcy51c2VybmFtZSkge1xyXG5cdFx0XHRcdFx0XHQkc3RhdGUuZ28oXCJob21lXCIpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1dLFxyXG5cdFx0XHRcdHJlc29sdmU6IHtcclxuXHRcdFx0XHRcdHVzZXJQb3N0czogWydwb3N0cycsICckc3RhdGVQYXJhbXMnLCBmdW5jdGlvbihwb3N0cywgJHN0YXRlUGFyYW1zKXtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIHBvc3RzLmdldFBvc3RzQnlVc2VyKCRzdGF0ZVBhcmFtcy51c2VybmFtZSk7XHJcblx0XHRcdFx0XHR9XVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHJcblx0XHRcdC5zdGF0ZSgnZmluZFVzZXInLCB7XHJcblx0XHRcdFx0dXJsOiAnL2ZpbmRVc2VyJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9maW5kVXNlci5odG1sJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnRmluZFVzZXJDdHJsJyxcclxuXHRcdFx0XHRvbkVudGVyOiBbJyRzdGF0ZScsICdhdXRoJywgZnVuY3Rpb24oJHN0YXRlLCBhdXRoKXtcclxuXHRcdFx0XHRcdGlmICghYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHRcdFx0JHN0YXRlLmdvKFwiaG9tZVwiKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XVxyXG5cclxuXHRcdFx0fSlcclxuXHJcblx0XHRcdC5zdGF0ZSgnbGlzdFVzZXInLCB7XHJcblx0XHRcdFx0dXJsOiAnL2xpc3RVc2VyJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9saXN0VXNlci5odG1sJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnRmluZFVzZXJDdHJsJyxcclxuXHRcdFx0XHRyZXNvbHZlOiB7XHJcblx0XHRcdFx0XHR1c2VyUHJvbWlzZTogWyd1c2VyJywgZnVuY3Rpb24odXNlcil7XHJcblx0XHRcdFx0XHRcdHJldHVybiB1c2VyLmdldEFsbFVzZXIoKTtcclxuXHRcdFx0XHRcdH1dXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRvbkVudGVyOiBbJyRzdGF0ZScsICdhdXRoJywgZnVuY3Rpb24oJHN0YXRlLCBhdXRoKXtcclxuXHRcdFx0XHRcdGlmICggIWF1dGguaXNMb2dnZWRJbigpIHx8IChhdXRoLmlzTG9nZ2VkSW4oKSAmJiAhYXV0aC5pc0FkbWluKCkpICkge1xyXG5cdFx0XHRcdFx0XHQkc3RhdGUuZ28oXCJob21lXCIpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1dXHJcblx0XHRcdH0pXHJcblxyXG5cdFx0XHQuc3RhdGUoJ2NoYW5nZVBhc3N3b3JkJywge1xyXG5cdFx0XHRcdHVybDogJy9jaGFuZ2VQYXNzd29yZCcsXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvY2hhbmdlUGFzc3dvcmQuaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ0F1dGhDdHJsJyxcclxuXHRcdFx0XHRvbkVudGVyOiBbJyRzdGF0ZScsICdhdXRoJywgZnVuY3Rpb24oJHN0YXRlLCBhdXRoKXtcclxuXHRcdFx0XHRcdGlmICghYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHRcdFx0JHN0YXRlLmdvKFwiaG9tZVwiKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XVxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHQkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKFwiaG9tZVwiKTtcclxuXHR9XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLmNvbnN0YW50c1wiLCBbXSlcclxuXHQuY29uc3RhbnQoJ1JFR0VYUFMnLCB7XHJcblx0XHRWQUxJRF9MSU5LX1JFUVVJUkVEX1BST1RPQ09MOiAvXigoaHR0cHN8aHR0cHxmdHApXFw6XFwvXFwvKShbd3xXXXszfVxcLik/W2EtekEtWjAtOVxcLVxcLl17Myx9XFwuW2EtekEtWl17Mix9KFxcLlthLXpBLVpdezIsfSk/KChcXC9bYS16QS1aMC05XSopKyhcXC5bYS16QS1aMC05XXsyLDR9KSk/LyxcclxuXHRcdFZBTElEX0xJTktfTk9UX1JFUVVJUkVEX1BST1RPQ09MOiAvXigoaHR0cHN8aHR0cHxmdHApXFw6XFwvXFwvKT8oW3d8V117M31cXC4pP1thLXpBLVowLTlcXC1cXC5dezMsfVxcLlthLXpBLVpdezIsfShcXC5bYS16QS1aXXsyLH0pPygoXFwvW2EtekEtWjAtOV0qKSsoXFwuW2EtekEtWjAtOV17Miw0fSkpPy8sXHJcblx0XHRWQUxJRF9VU0VSOiAvXlthLXpBLVowLTlfXFwuXXs1LDIwfSQvLFxyXG5cdFx0VkFMSURfUEFTU1dPUkQ6IC9eLns4LH0kLyxcclxuXHRcdFZBTElEX0VNQUlMOiAvXlthLXpBLVpdK1tcXC4wLTlfXStAW2EtejAtOV0rXFwuW2Etel17Miw0fSQvXHJcblx0fSk7IiwiYW5ndWxhci5tb2R1bGUoXCJteU5ldHdvcmsuZmlsdGVyc1wiLCBbXSlcclxuXHQuZmlsdGVyKCdsaW5rJywgWydSRUdFWFBTJywgZnVuY3Rpb24ocmVnZXgpe1xyXG5cdFx0cmV0dXJuIGZ1bmN0aW9uKGxpbmspe1xyXG5cdFx0XHR2YXIgVkFMSURfTElOSyA9IHJlZ2V4LlZBTElEX0xJTktfUkVRVUlSRURfUFJPVE9DT0w7XHJcblx0XHRcdGlmIChWQUxJRF9MSU5LLnRlc3QobGluaykpIHtcclxuXHRcdFx0XHRyZXR1cm4gbGluaztcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gJ2h0dHBzOi8vJyArIGxpbms7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fV0pXHJcblx0OyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLmhvbWUudmlld3Bvc3RzLmNvbnRyb2xsZXJcIiwgW10pXHJcblx0LmNvbnRyb2xsZXIoXCJWaWV3UG9zdHNDdHJsXCIsIFtcIiRzY29wZVwiLCBcIiR3aW5kb3dcIiwgXCJwb3N0c1wiLCAnYXV0aCcsICdSRUdFWFBTJywgXCJQdXNoZXJcIiwgZnVuY3Rpb24oJHNjb3BlLCAkd2luZG93LCBwb3N0cywgYXV0aCwgcmVnZXgsIFB1c2hlcil7XHJcblx0XHRcclxuXHRcdCRzY29wZS5pc0xvZ2dlZEluID0gYXV0aC5pc0xvZ2dlZEluO1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gYXV0aC5jdXJyZW50VXNlcjtcclxuXHRcdCRzY29wZS5sb2dPdXQgPSBhdXRoLmxvZ091dDtcclxuXHRcdCRzY29wZS5pc0FkbWluID0gYXV0aC5pc0FkbWluO1xyXG5cdFx0JHNjb3BlLmFsbHBvc3RzID0gcG9zdHMucG9zdHM7XHJcblx0XHQkc2NvcGUuc29ydE9yZGVyID0gJy1kYXRlJztcclxuXHRcdCRzY29wZS5zb3J0T3B0aW9ucyA9IFtcclxuXHRcdFx0eyBuYW1lOiAnTeG7m2kgbmjhuqV0Jywgb3JkZXI6ICctZGF0ZScgfSxcclxuXHRcdFx0eyBuYW1lOiAnTmhp4buBdSBsaWtlIG5o4bqldCcsIG9yZGVyOiAnLXVzZXJzTGlrZWQubGVuZ3RoJyB9LFxyXG5cdFx0XHR7IG5hbWU6ICdOaGnhu4F1IGLDrG5oIGx14bqtbiBuaOG6pXQnLCBvcmRlcjogJy1jb21tZW50cy5sZW5ndGgnIH1cdFx0XHJcblx0XHRdO1xyXG5cdFx0JHNjb3BlLnBvc3RzUGVyUGFnZSA9IDEwO1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRQYWdlID0gMTtcclxuXHRcdFxyXG5cdFx0JHNjb3BlLmVycm9yID0gJyc7XHJcblx0XHQkc2NvcGUuZWRpdGluZyA9IHt9O1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRMaWtlID0gZmFsc2U7XHJcblx0XHR2YXIgVkFMSURfTElOSyA9IHJlZ2V4LlZBTElEX0xJTktfTk9UX1JFUVVJUkVEX1BST1RPQ09MO1xyXG5cclxuXHRcdCRzY29wZS5zZXRPcmRlciA9IGZ1bmN0aW9uKG9yZGVyKSB7XHJcblx0XHRcdCRzY29wZS5zb3J0T3JkZXIgPSBvcmRlcjtcclxuXHRcdH07XHJcblx0XHQkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdGlmICghJHNjb3BlLm5ld3RpdGxlKSB7XHJcblx0XHRcdFx0JHNjb3BlLmVycm9yID0gJ0LhuqFuIGNoxrBhIG5o4bqtcCBu4buZaSBkdW5nISc7XHJcblx0XHRcdH0gZWxzZSBpZiAoJHNjb3BlLm5ld2xpbmsgJiYgIVZBTElEX0xJTksudGVzdCgkc2NvcGUubmV3bGluaykpIHtcclxuXHRcdFx0XHQkc2NvcGUuZXJyb3IgPSAnTGluayBraMO0bmcgaOG7o3AgbOG7hyEnO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHRwb3N0cy5jcmVhdGUoe1xyXG5cdFx0XHRcdFx0dGl0bGU6ICRzY29wZS5uZXd0aXRsZSxcclxuXHRcdFx0XHRcdGxpbms6ICRzY29wZS5uZXdsaW5rLFxyXG5cdFx0XHRcdFx0ZGF0ZTogbmV3IERhdGUoKVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCRzY29wZS5uZXd0aXRsZSA9ICcnO1xyXG5cdFx0XHRcdCRzY29wZS5uZXdsaW5rID0gJyc7XHJcblx0XHRcdFx0JHNjb3BlLmVycm9yID0gJyc7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLm1vdmVUb1RvcCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHQkd2luZG93LnNjcm9sbFRvKDAsIDApO1xyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUubGlrZV91bmxpa2UgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdGlmIChhdXRoLmlzTG9nZ2VkSW4oKSkge1xyXG5cdFx0XHRcdHZhciB1c2VyID0gYXV0aC5jdXJyZW50VXNlcigpO1xyXG5cdFx0XHRcdGlmIChwb3N0LnVzZXJzTGlrZWQuaW5kZXhPZih1c2VyKSA9PT0gLTEpIHtcclxuXHRcdFx0XHRcdHBvc3RzLmxpa2UocG9zdCk7XHJcblx0XHRcdFx0XHQvLyBwb3N0LnBvaW50cys9MjtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cG9zdHMudW5saWtlKHBvc3QpO1xyXG5cdFx0XHRcdFx0Ly8gcG9zdC5wb2ludHMtPTI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5kaXNsaWtlX3VuZGlzbGlrZSA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0aWYgKGF1dGguaXNMb2dnZWRJbigpKSB7XHJcblx0XHRcdFx0dmFyIHVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcblx0XHRcdFx0aWYgKHBvc3QudXNlcnNEaXNsaWtlZC5pbmRleE9mKHVzZXIpID09PSAtMSkge1xyXG5cdFx0XHRcdFx0cG9zdHMuZGlzbGlrZShwb3N0KTtcclxuXHRcdFx0XHRcdC8vIHBvc3QudXNlcnNEaXNsaWtlZC5wdXNoKHVzZXIpO1xyXG5cdFx0XHRcdFx0Ly8gcG9zdC5wb2ludHMtLTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cG9zdHMudW5kaXNsaWtlKHBvc3QpO1xyXG5cdFx0XHRcdFx0Ly8gdmFyIGluZGV4ID0gcG9zdC51c2Vyc0Rpc2xpa2VkLmluZGV4T2YodXNlcik7XHJcblx0XHRcdFx0XHQvLyBwb3N0LnVzZXJzRGlzbGlrZWQuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHRcdC8vIHBvc3QucG9pbnRzKys7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5saWtlVG9vbHRpcFRleHQgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdGlmIChhdXRoLmlzTG9nZ2VkSW4oKSkge1xyXG5cdFx0XHRcdHZhciB1c2VyID0gYXV0aC5jdXJyZW50VXNlcigpO1xyXG5cdFx0XHRcdGlmIChwb3N0LnVzZXJzTGlrZWQuaW5kZXhPZih1c2VyKSAhPT0gLTEpIHtcclxuXHRcdFx0XHRcdHJldHVybiBcIkLhu48gdGjDrWNoXCI7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHJldHVybiBcIlRow61jaFwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gXCLEkMSDbmcgbmjhuq1wIMSR4buDIHRow61jaCBiw6BpIHZp4bq/dCFcIjtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUuZGlzbGlrZVRvb2x0aXBUZXh0ID0gZnVuY3Rpb24ocG9zdCkge1xyXG5cdFx0XHRpZiAoYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHR2YXIgdXNlciA9IGF1dGguY3VycmVudFVzZXIoKTtcclxuXHRcdFx0XHRpZiAocG9zdC51c2Vyc0Rpc2xpa2VkLmluZGV4T2YodXNlcikgIT09IC0xKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gXCJC4buPIGtow7RuZyB0aMOtY2hcIjtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiS2jDtG5nIHRow61jaFwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gXCLEkMSDbmcgbmjhuq1wIMSR4buDIGtow7RuZyB0aMOtY2ggYsOgaSB2aeG6v3QhXCI7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmVkaXQgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdCRzY29wZS5lZGl0aW5nLmN1cnJlbnQgPSBbcG9zdCwgdHJ1ZV07XHJcblx0XHRcdCRzY29wZS50aXRsZSA9ICRzY29wZS5lZGl0aW5nLmN1cnJlbnRbMF0udGl0bGU7XHJcblx0XHRcdCRzY29wZS5saW5rID0gJHNjb3BlLmVkaXRpbmcuY3VycmVudFswXS5saW5rO1xyXG5cdFx0XHQkc2NvcGUubW92ZVRvVG9wKCk7XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5zYXZlID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0XHJcblx0XHRcdGlmICghJHNjb3BlLnRpdGxlICYmICEkc2NvcGUubGluaykge1xyXG5cdFx0XHRcdGlmICgkd2luZG93LmNvbmZpcm0oXCJDw7MgcGjhuqNpIGLhuqFuIG114buRbiB4w7NhIGLDoGkgdmnhur90IG7DoHk/XCIpKSB7XHJcblx0XHRcdFx0XHRwb3N0cy5kZWxldGUoJHNjb3BlLmVkaXRpbmcuY3VycmVudFswXSk7XHJcblx0XHRcdFx0XHQkc2NvcGUuZWRpdGluZyA9IHt9O1xyXG5cdFx0XHRcdFx0JHNjb3BlLmVycm9yID0gJyc7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2UgaWYgKCEkc2NvcGUudGl0bGUpIHtcclxuXHRcdFx0XHQkc2NvcGUuZXJyb3IgPSAnQuG6oW4gY2jGsGEgbmjhuq1wIG7hu5lpIGR1bmchJztcclxuXHRcdFx0fSBlbHNlIGlmICgkc2NvcGUubGluayAmJiAhVkFMSURfTElOSy50ZXN0KCRzY29wZS5saW5rKSkge1xyXG5cdFx0XHRcdCRzY29wZS5lcnJvciA9ICdMaW5rIGtow7RuZyBo4bujcCBs4buHISc7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Ly8gY29uc29sZS5sb2coJHNjb3BlLnRpdGxlKTtcclxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZygkc2NvcGUubGluayk7XHJcblx0XHRcdFx0dmFyIHVwZGF0ZWRQb3N0ID0ge1xyXG5cdFx0XHRcdFx0X2lkOiAkc2NvcGUuZWRpdGluZy5jdXJyZW50WzBdLl9pZCxcclxuXHRcdFx0XHRcdHRpdGxlOiAkc2NvcGUudGl0bGUsXHJcblx0XHRcdFx0XHRsaW5rOiAkc2NvcGUubGluayxcclxuXHRcdFx0XHRcdGRhdGU6IG5ldyBEYXRlKClcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKHVwZGF0ZWRQb3N0KTtcclxuXHRcdFx0XHRwb3N0cy5zYXZlKHVwZGF0ZWRQb3N0KTtcclxuXHRcdFx0XHQkc2NvcGUuZWRpdGluZyA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5lcnJvciA9ICcnO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0XHJcblxyXG5cclxuXHRcdCRzY29wZS5yZXNldCA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdCRzY29wZS5lZGl0aW5nID0ge307XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5kZWxldGUgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdGlmICgkd2luZG93LmNvbmZpcm0oXCJC4bqhbiBjw7MgY2jhuq9jIGNo4bqvbiBtdeG7kW4geMOzYSBraMO0bmc/XCIpKSB7XHJcblx0XHRcdFx0cG9zdHMuZGVsZXRlKHBvc3QpO1xyXG5cdFx0XHR9XHRcdFx0XHJcblx0XHR9O1xyXG5cclxuXHJcblxyXG5cdH1dKTsiLCJhbmd1bGFyLm1vZHVsZShcIm15TmV0d29yay5ob21lLm5hdi5jb250cm9sbGVyXCIsIFtdKVxyXG5cdC5jb250cm9sbGVyKCdOYXZDdHJsJywgWyckc2NvcGUnLCAnYXV0aCcsIGZ1bmN0aW9uKCRzY29wZSwgYXV0aCl7XHJcblx0XHQkc2NvcGUuaXNMb2dnZWRJbiA9IGF1dGguaXNMb2dnZWRJbjtcclxuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IGF1dGguY3VycmVudFVzZXI7XHJcblx0XHQkc2NvcGUubG9nT3V0ID0gYXV0aC5sb2dPdXQ7XHJcblx0fV0pOyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLnBvc3Qudmlld2NvbW1lbnRzLmNvbnRyb2xsZXJcIiwgW10pXHJcblx0LmNvbnRyb2xsZXIoXCJWaWV3Q29tbWVudHNDdHJsXCIsIFtcIiRzY29wZVwiLCBcInBvc3RzXCIsIFwicG9zdFwiLCAnYXV0aCcsICckd2luZG93JywgJ1B1c2hlcicsIGZ1bmN0aW9uKCRzY29wZSwgcG9zdHMsIHBvc3QsIGF1dGgsICR3aW5kb3csIFB1c2hlcil7XHJcblx0XHQkc2NvcGUucG9zdCA9IHBvc3Q7XHJcblx0XHQkc2NvcGUuZXJyb3IgPSAnJztcclxuXHRcdCRzY29wZS5idXR0b24gPSB7IG5hbWU6ICdDb21tZW50JyB9O1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRDb21tZW50ID0ge307XHJcblx0XHQkc2NvcGUuY3VycmVudFVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyO1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRQYWdlID0gMTtcclxuXHRcdCRzY29wZS5pc0xvZ2dlZEluID0gYXV0aC5pc0xvZ2dlZEluO1xyXG5cdFx0JHNjb3BlLmlzQWRtaW4gPSBhdXRoLmlzQWRtaW47XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZSgkc2NvcGUucG9zdC5faWQudG9TdHJpbmcoKSwgXCJhZGRDb21tZW50XCIsIGZ1bmN0aW9uKGNvbW1lbnQpe1xyXG5cdFx0XHQkc2NvcGUucG9zdC5jb21tZW50cy5zcGxpY2UoMCwgMCwgY29tbWVudCk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKCRzY29wZS5wb3N0Ll9pZC50b1N0cmluZygpLCBcInNhdmVDb21tZW50XCIsIGZ1bmN0aW9uKGNvbW1lbnQpe1xyXG5cdFx0XHR2YXIgY29tbWVudEluZGV4ID0gJHNjb3BlLnBvc3QuY29tbWVudHMubWFwKGZ1bmN0aW9uKGl0ZW0pe1xyXG5cdFx0XHRcdHJldHVybiBpdGVtLl9pZDtcclxuXHRcdFx0fSkuaW5kZXhPZihjb21tZW50Ll9pZCk7XHJcblx0XHRcdCRzY29wZS5wb3N0LmNvbW1lbnRzW2NvbW1lbnRJbmRleF0gPSBjb21tZW50O1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZShcImNvbW1lbnRzXCIsIFwiZGVsZXRlQ29tbWVudFwiLCBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIGluZGV4ID0gJHNjb3BlLnBvc3QuY29tbWVudHMubWFwKGZ1bmN0aW9uKGl0ZW0pe1xyXG5cdFx0XHRcdHJldHVybiBpdGVtLl9pZDtcclxuXHRcdFx0fSkuaW5kZXhPZihkYXRhLmNvbW1lbnQpO1xyXG5cdFx0XHQkc2NvcGUucG9zdC5jb21tZW50cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZSgkc2NvcGUucG9zdC5faWQudG9TdHJpbmcoKSwgXCJsaWtlQ29tbWVudFwiLCBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIGNvbW1lbnRJZHMgPSAkc2NvcGUucG9zdC5jb21tZW50cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0cmV0dXJuIGl0ZW0uX2lkO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0dmFyIGNvbW1lbnRJbmRleCA9IGNvbW1lbnRJZHMuaW5kZXhPZihkYXRhLmNvbW1lbnQuX2lkKTtcclxuXHRcdFx0JHNjb3BlLnBvc3QuY29tbWVudHNbY29tbWVudEluZGV4XS51c2Vyc0xpa2VkLnB1c2goZGF0YS51c2VyKTtcclxuXHRcdFx0Ly8gY29uc29sZS5sb2coJHNjb3BlLnBvc3QpO1xyXG5cdFx0XHQvLyBjb25zb2xlLmxvZyhkYXRhKTtcclxuXHRcdFx0XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKCRzY29wZS5wb3N0Ll9pZC50b1N0cmluZygpLCBcInVubGlrZUNvbW1lbnRcIiwgZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBjb21tZW50SW5kZXggPSAkc2NvcGUucG9zdC5jb21tZW50cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0cmV0dXJuIGl0ZW0uX2lkO1xyXG5cdFx0XHR9KS5pbmRleE9mKGRhdGEuY29tbWVudC5faWQpO1xyXG5cdFx0XHR2YXIgdXNlckluZGV4ID0gJHNjb3BlLnBvc3QuY29tbWVudHNbY29tbWVudEluZGV4XS51c2Vyc0xpa2VkLmluZGV4T2YoZGF0YS51c2VyKTtcclxuXHRcdFx0JHNjb3BlLnBvc3QuY29tbWVudHNbY29tbWVudEluZGV4XS51c2Vyc0xpa2VkLnNwbGljZSh1c2VySW5kZXgsIDEpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZSgkc2NvcGUucG9zdC5faWQudG9TdHJpbmcoKSwgXCJkaXNsaWtlQ29tbWVudFwiLCBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIGNvbW1lbnRJbmRleCA9ICRzY29wZS5wb3N0LmNvbW1lbnRzLm1hcChmdW5jdGlvbihpdGVtKXtcclxuXHRcdFx0XHRyZXR1cm4gaXRlbS5faWQ7XHJcblx0XHRcdH0pLmluZGV4T2YoZGF0YS5jb21tZW50Ll9pZCk7XHJcblx0XHRcdCRzY29wZS5wb3N0LmNvbW1lbnRzW2NvbW1lbnRJbmRleF0udXNlcnNEaXNsaWtlZC5wdXNoKGRhdGEudXNlcik7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKCRzY29wZS5wb3N0Ll9pZC50b1N0cmluZygpLCBcInVuZGlzbGlrZUNvbW1lbnRcIiwgZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBjb21tZW50SW5kZXggPSAkc2NvcGUucG9zdC5jb21tZW50cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0cmV0dXJuIGl0ZW0uX2lkO1xyXG5cdFx0XHR9KS5pbmRleE9mKGRhdGEuY29tbWVudC5faWQpO1xyXG5cdFx0XHR2YXIgdXNlckluZGV4ID0gJHNjb3BlLnBvc3QuY29tbWVudHNbY29tbWVudEluZGV4XS51c2Vyc0Rpc2xpa2VkLmluZGV4T2YoZGF0YS51c2VyKTtcclxuXHRcdFx0JHNjb3BlLnBvc3QuY29tbWVudHNbY29tbWVudEluZGV4XS51c2Vyc0Rpc2xpa2VkLnNwbGljZSh1c2VySW5kZXgsIDEpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0JHNjb3BlLmFkZENvbW1lbnQgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRpZiAoJHNjb3BlLmJvZHkpIHtcclxuXHRcdFx0XHRwb3N0cy5hZGRDb21tZW50KHBvc3QuX2lkLCB7XHJcblx0XHRcdFx0XHRib2R5OiAkc2NvcGUuYm9keSxcclxuXHRcdFx0XHRcdGRhdGU6IG5ldyBEYXRlKClcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHQkc2NvcGUuZXJyb3IgPSBudWxsO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdCRzY29wZS5lcnJvciA9ICdC4bqhbiBjaMawYSBuaOG6rXAgbuG7mWkgZHVuZyBiw6xuaCBsdeG6rW4hJztcclxuXHRcdFx0fVxyXG5cdFx0XHQkc2NvcGUuYm9keSA9ICcnO1xyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUubGlrZV91bmxpa2VDb21tZW50ID0gZnVuY3Rpb24ocG9zdCwgY29tbWVudCkge1xyXG5cdFx0XHR2YXIgdXNlciA9IGF1dGguY3VycmVudFVzZXIoKTtcclxuXHRcdFx0aWYgKGNvbW1lbnQudXNlcnNMaWtlZC5pbmRleE9mKHVzZXIpID09PSAtMSkge1xyXG5cdFx0XHRcdHBvc3RzLmxpa2VDb21tZW50KHBvc3QsIGNvbW1lbnQpO1xyXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tbGlrZSBjbXQtLS0tLS0tLS0tLS0tLS0tLVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRwb3N0cy51bmxpa2VDb21tZW50KHBvc3QsIGNvbW1lbnQpO1xyXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKFwidW5saWtlIGNtdFwiKTtcclxuXHRcdFx0XHQvLyB2YXIgaW5kZXggPSBjb21tZW50LnVzZXJzTGlrZWQuaW5kZXhPZih1c2VyKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUuZGlzbGlrZV91bmRpc2xpa2VDb21tZW50ID0gZnVuY3Rpb24ocG9zdCwgY29tbWVudCkge1xyXG5cdFx0XHR2YXIgdXNlciA9IGF1dGguY3VycmVudFVzZXIoKTtcclxuXHRcdFx0aWYgKGNvbW1lbnQudXNlcnNEaXNsaWtlZC5pbmRleE9mKHVzZXIpID09PSAtMSkge1xyXG5cdFx0XHRcdHBvc3RzLmRpc2xpa2VDb21tZW50KHBvc3QsIGNvbW1lbnQpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHBvc3RzLnVuZGlzbGlrZUNvbW1lbnQocG9zdCwgY29tbWVudCk7XHJcblx0XHRcdFx0Ly8gdmFyIGluZGV4ID0gY29tbWVudC51c2Vyc0Rpc2xpa2VkLmluZGV4T2YodXNlcik7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmxpa2VUb29sdGlwVGV4dCA9IGZ1bmN0aW9uKGNvbW1lbnQpIHtcclxuXHRcdFx0aWYgKGF1dGguaXNMb2dnZWRJbigpKSB7XHJcblx0XHRcdFx0dmFyIHVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcblx0XHRcdFx0aWYgKGNvbW1lbnQudXNlcnNMaWtlZC5pbmRleE9mKHVzZXIpICE9PSAtMSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiQuG7jyB0aMOtY2hcIjtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiVGjDrWNoXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJldHVybiBcIsSQxINuZyBuaOG6rXAgxJHhu4MgdGjDrWNoIGLDrG5oIGx14bqtbiFcIjtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUuZGlzbGlrZVRvb2x0aXBUZXh0ID0gZnVuY3Rpb24oY29tbWVudCkge1xyXG5cdFx0XHRpZiAoYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHR2YXIgdXNlciA9IGF1dGguY3VycmVudFVzZXIoKTtcclxuXHRcdFx0XHRpZiAoY29tbWVudC51c2Vyc0Rpc2xpa2VkLmluZGV4T2YodXNlcikgIT09IC0xKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gXCJC4buPIGtow7RuZyB0aMOtY2hcIjtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiS2jDtG5nIHRow61jaFwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gXCLEkMSDbmcgbmjhuq1wIMSR4buDIGtow7RuZyB0aMOtY2ggYsOsbmggbHXhuq1uIVwiO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5kZWxldGVDb21tZW50ID0gZnVuY3Rpb24ocG9zdCwgY29tbWVudCkge1xyXG5cdFx0XHRpZiAoJHdpbmRvdy5jb25maXJtKFwiQuG6oW4gY8OzIGNo4bqvYyBjaOG6r24gbXXhu5FuIHjDs2Ega2jDtG5nP1wiKSkge1xyXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKFwiQmVmb3JlIGRlbGV0ZTpcIik7XHJcblx0XHRcdFx0Ly8gY29uc29sZS5sb2cocG9zdCk7XHJcblx0XHRcdFx0cG9zdHMuZGVsZXRlQ29tbWVudChwb3N0LCBjb21tZW50KTtcdFxyXG5cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUuZWRpdENvbW1lbnQgPSBmdW5jdGlvbihwb3N0LCBjb21tZW50KSB7XHJcblx0XHRcdCRzY29wZS5idXR0b24ubmFtZSA9ICdTYXZlJztcclxuXHRcdFx0JHNjb3BlLmJvZHkgPSBjb21tZW50LmJvZHk7XHJcblx0XHRcdCRzY29wZS5jdXJyZW50Q29tbWVudCA9IGNvbW1lbnQ7XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgaGVpZ2h0U3RyID0gYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0KS50b1N0cmluZygpO1xyXG5cdFx0XHR2YXIgaGVpZ2h0ID0gcGFyc2VJbnQoaGVpZ2h0U3RyLnN1YnN0cigxLCBoZWlnaHRTdHIubGVuZ3RoIC0gMikpO1xyXG5cdFx0XHQkd2luZG93LnNjcm9sbFRvKDAsIGhlaWdodCk7XHJcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb21tZW50SW5wdXQnKS5zZWxlY3QoKTtcclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLnNhdmUgPSBmdW5jdGlvbihwb3N0LCBjb21tZW50KXtcclxuXHRcdFx0aWYgKCRzY29wZS5ib2R5KSB7XHJcblx0XHRcdFx0cG9zdHMuc2F2ZUNvbW1lbnQocG9zdCwge1xyXG5cdFx0XHRcdFx0X2lkOiAkc2NvcGUuY3VycmVudENvbW1lbnQuX2lkLFxyXG5cdFx0XHRcdFx0Ym9keTogJHNjb3BlLmJvZHksXHJcblx0XHRcdFx0XHRkYXRlOiBuZXcgRGF0ZSgpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0aWYgKCR3aW5kb3cuY29uZmlybShcIkLhuqFuIGPDsyBjaOG6r2MgY2jhuq9uIG114buRbiB4w7NhIGtow7RuZz9cIikpIHtcclxuXHRcdFx0XHRcdHBvc3RzLmRlbGV0ZUNvbW1lbnQocG9zdCwgJHNjb3BlLmN1cnJlbnRDb21tZW50KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0JHNjb3BlLmJ1dHRvbi5uYW1lID0gJ0NvbW1lbnQnO1xyXG5cdFx0XHQkc2NvcGUuYm9keSA9ICcnO1xyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUucmVzZXQgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHQkc2NvcGUuYm9keSA9ICcnO1xyXG5cdFx0XHQkc2NvcGUuYnV0dG9uLm5hbWUgPSAnQ29tbWVudCc7XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5tb3ZlVG9Ub3AgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0JHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHR9XSk7IiwiYW5ndWxhci5tb2R1bGUoXCJteU5ldHdvcmsucG9zdC5zZXJ2aWNlXCIsIFtdKVxyXG5cdC5mYWN0b3J5KFwicG9zdHNcIiwgW1wiJGh0dHBcIiwgXCJhdXRoXCIsIFwiUHVzaGVyXCIsIFwiJHN0YXRlXCIsIGZ1bmN0aW9uKCRodHRwLCBhdXRoLCBQdXNoZXIsICRzdGF0ZSl7XHJcblx0XHR2YXIgcG9zdFNlcnZpY2UgPSB7XHJcblx0XHRcdHBvc3RzOiBbXVxyXG5cdFx0fTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKFwicG9zdHNcIiwgXCJhZGRQb3N0XCIsIGZ1bmN0aW9uKHBvc3Qpe1xyXG5cdFx0XHRwb3N0U2VydmljZS5wb3N0cy5zcGxpY2UoMCwgMCwgcG9zdCk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKFwicG9zdHNcIiwgXCJzYXZlUG9zdFwiLCBmdW5jdGlvbihwb3N0KXtcclxuXHRcdFx0dmFyIHBvc3RJbmRleCA9IHBvc3RTZXJ2aWNlLmdldEFsbFBvc3RJZHMoKS5pbmRleE9mKHBvc3QuX2lkKTtcclxuXHRcdFx0cG9zdFNlcnZpY2UucG9zdHNbcG9zdEluZGV4XSA9IHBvc3Q7XHJcblx0XHRcdCRzdGF0ZS5nbyhcImhvbWVcIik7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKFwicG9zdHNcIiwgXCJkZWxldGVQb3N0XCIsIGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHR2YXIgaW5kZXggPSBwb3N0U2VydmljZS5nZXRBbGxQb3N0SWRzKCkuaW5kZXhPZihkYXRhLnBvc3QpO1xyXG5cdFx0XHRwb3N0U2VydmljZS5wb3N0cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0XHQkc3RhdGUuZ28oXCJob21lXCIpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZShcInBvc3RzXCIsIFwibGlrZVBvc3RcIiwgZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBpbmRleCA9IHBvc3RTZXJ2aWNlLmdldEFsbFBvc3RJZHMoKS5pbmRleE9mKGRhdGEucG9zdC5faWQpO1xyXG5cdFx0XHRwb3N0U2VydmljZS5wb3N0c1tpbmRleF0udXNlcnNMaWtlZC5wdXNoKGRhdGEudXNlcm5hbWUpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0UHVzaGVyLnN1YnNjcmliZShcInBvc3RzXCIsIFwidW5saWtlUG9zdFwiLCBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIHBvc3RJbmRleCA9IHBvc3RTZXJ2aWNlLmdldEFsbFBvc3RJZHMoKS5pbmRleE9mKGRhdGEucG9zdC5faWQpO1xyXG5cdFx0XHR2YXIgdXNySW5kZXggPSBwb3N0U2VydmljZS5wb3N0c1twb3N0SW5kZXhdLnVzZXJzTGlrZWQuaW5kZXhPZihkYXRhLnVzZXJuYW1lKTtcclxuXHRcdFx0cG9zdFNlcnZpY2UucG9zdHNbcG9zdEluZGV4XS51c2Vyc0xpa2VkLnNwbGljZSh1c3JJbmRleCwgMSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKFwicG9zdHNcIiwgXCJkaXNsaWtlUG9zdFwiLCBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIGluZGV4ID0gcG9zdFNlcnZpY2UuZ2V0QWxsUG9zdElkcygpLmluZGV4T2YoZGF0YS5wb3N0Ll9pZCk7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLnBvc3RzW2luZGV4XS51c2Vyc0Rpc2xpa2VkLnB1c2goZGF0YS51c2VybmFtZSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRQdXNoZXIuc3Vic2NyaWJlKFwicG9zdHNcIiwgXCJ1bmRpc2xpa2VQb3N0XCIsIGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHR2YXIgcG9zdEluZGV4ID0gcG9zdFNlcnZpY2UuZ2V0QWxsUG9zdElkcygpLmluZGV4T2YoZGF0YS5wb3N0Ll9pZCk7XHJcblx0XHRcdHZhciB1c3JJbmRleCA9IHBvc3RTZXJ2aWNlLnBvc3RzW3Bvc3RJbmRleF0udXNlcnNMaWtlZC5pbmRleE9mKGRhdGEudXNlcm5hbWUpO1xyXG5cdFx0XHRwb3N0U2VydmljZS5wb3N0c1twb3N0SW5kZXhdLnVzZXJzRGlzbGlrZWQuc3BsaWNlKHVzckluZGV4LCAxKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHBvc3RTZXJ2aWNlLmdldEFsbCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvcG9zdHMnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHRcdGFuZ3VsYXIuY29weShkYXRhLCBwb3N0U2VydmljZS5wb3N0cyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS5nZXRQb3N0c0J5VXNlciA9IGZ1bmN0aW9uKHVzZXJuYW1lKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoJy9wb3N0cy91c2VyLycgKyB1c2VybmFtZSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdFx0cmV0dXJuIHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS5nZXRBbGxQb3N0SWRzID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiBwb3N0U2VydmljZS5wb3N0cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0cmV0dXJuIGl0ZW0uX2lkO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2UuY3JlYXRlID0gZnVuY3Rpb24ocG9zdCl7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KCcvcG9zdHMnLCBwb3N0LCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2UuZ2V0ID0gZnVuY3Rpb24oaWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldCgnL3Bvc3RzLycgKyBpZCkudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdHJldHVybiByZXMuZGF0YTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cclxuXHRcdHBvc3RTZXJ2aWNlLmFkZENvbW1lbnQgPSBmdW5jdGlvbihpZCwgY29tbWVudCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL3Bvc3RzLycgKyBpZCArICcvY29tbWVudHMnLCBjb21tZW50LCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2UubGlrZSA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnB1dCgnL3Bvc3RzLycgKyBwb3N0Ll9pZCArICcvbGlrZScsIG51bGwsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS51bmxpa2UgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoJy9wb3N0cy8nICsgcG9zdC5faWQgKyAnL3VubGlrZScsIG51bGwsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS5kaXNsaWtlID0gZnVuY3Rpb24ocG9zdCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucHV0KCcvcG9zdHMvJyArIHBvc3QuX2lkICsgJy9kaXNsaWtlJywgbnVsbCwge1xyXG5cdFx0XHRcdGhlYWRlcnM6IHtBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGF1dGguZ2V0VG9rZW4oKX1cclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cclxuXHRcdHBvc3RTZXJ2aWNlLnVuZGlzbGlrZSA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnB1dCgnL3Bvc3RzLycgKyBwb3N0Ll9pZCArICcvdW5kaXNsaWtlJywgbnVsbCwge1xyXG5cdFx0XHRcdGhlYWRlcnM6IHtBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGF1dGguZ2V0VG9rZW4oKX1cclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cclxuXHRcdHBvc3RTZXJ2aWNlLnNhdmUgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoJy9wb3N0cy8nICsgcG9zdC5faWQgKyAnL3NhdmUnLCBwb3N0LCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2Uuc2F2ZUNvbW1lbnQgPSBmdW5jdGlvbihwb3N0LCBjb21tZW50KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoJy9wb3N0cy8nICsgcG9zdC5faWQgKyAnL2NvbW1lbnRzLycgKyBjb21tZW50Ll9pZCArICcvc2F2ZScsIGNvbW1lbnQsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS5kZWxldGUgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoJy9wb3N0cy8nICsgcG9zdC5faWQsIG51bGwsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS5kZWxldGVDb21tZW50ID0gZnVuY3Rpb24ocG9zdCxjb21tZW50KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoJy9wb3N0cy8nICsgcG9zdC5faWQgKyAnL2NvbW1lbnRzLycgKyBjb21tZW50Ll9pZCwgbnVsbCwge1xyXG5cdFx0XHRcdGhlYWRlcnM6IHtBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGF1dGguZ2V0VG9rZW4oKX1cclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cclxuXHRcdHBvc3RTZXJ2aWNlLmxpa2VDb21tZW50ID0gZnVuY3Rpb24ocG9zdCwgY29tbWVudCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucHV0KCcvcG9zdHMvJyArIHBvc3QuX2lkICsgJy9jb21tZW50cy8nICsgY29tbWVudC5faWQgKyAnL2xpa2UnLCBudWxsLCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2UudW5saWtlQ29tbWVudCA9IGZ1bmN0aW9uKHBvc3QsIGNvbW1lbnQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnB1dCgnL3Bvc3RzLycgKyBwb3N0Ll9pZCArICcvY29tbWVudHMvJyArIGNvbW1lbnQuX2lkICsgJy91bmxpa2UnLCBudWxsLCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0cG9zdFNlcnZpY2UuZGlzbGlrZUNvbW1lbnQgPSBmdW5jdGlvbihwb3N0LCBjb21tZW50KSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoJy9wb3N0cy8nICsgcG9zdC5faWQgKyAnL2NvbW1lbnRzLycgKyBjb21tZW50Ll9pZCArICcvZGlzbGlrZScsIG51bGwsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRwb3N0U2VydmljZS51bmRpc2xpa2VDb21tZW50ID0gZnVuY3Rpb24ocG9zdCwgY29tbWVudCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucHV0KCcvcG9zdHMvJyArIHBvc3QuX2lkICsgJy9jb21tZW50cy8nICsgY29tbWVudC5faWQgKyAnL3VuZGlzbGlrZScsIG51bGwsIHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7QXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBhdXRoLmdldFRva2VuKCl9XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRyZXR1cm4gcG9zdFNlcnZpY2U7XHJcblx0fV0pXHJcblx0OyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLnVzZXIuZmluZC5jb250cm9sbGVyXCIsIFtdKVxyXG5cdC5jb250cm9sbGVyKCdGaW5kVXNlckN0cmwnLCBbJyRzY29wZScsICd1c2VyJywgJyRzdGF0ZScsICckd2luZG93JywgZnVuY3Rpb24oJHNjb3BlLCB1c2VyLCAkc3RhdGUsICR3aW5kb3cpe1xyXG5cdFx0JHNjb3BlLnVzZXJzID0gdXNlci51c2VycztcclxuXHRcdCRzY29wZS5tZXNzYWdlcyA9IHt9O1xyXG5cdFx0JHNjb3BlLmZpbmRVc2VyID0gZnVuY3Rpb24odXNyKSB7XHJcblx0XHRcdHJldHVybiB1c2VyLmZpbmRVc2VyKHVzcikudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdHJldHVybiByZXMuZGF0YS5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gaXRlbS51c2VybmFtZTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5nb3RvID0gZnVuY3Rpb24odXNyKSB7XHJcblx0XHRcdGlmICh1c3IpIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oXCJ1c2VyXCIsIHt1c2VybmFtZTogdXNyfSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0JHNjb3BlLm1lc3NhZ2VzLmVycm9yID0gJ0LhuqFuIGNoxrBhIG5o4bqtcCB0w6puIG5nxrDhu51pIGTDuW5nIGPhuqduIHTDrG0hJztcclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmRlbGV0ZVVzZXIgPSBmdW5jdGlvbih1c3IpIHtcclxuXHRcdFx0aWYgKCR3aW5kb3cuY29uZmlybShcIkLhuqFuIGPDsyBjaOG6r2MgY2jhuq9uIG114buRbiB4w7NhIG5nxrDhu51pIGTDuW5nIG7DoHkgcmEga2jhu49pIGjhu4cgdGjhu5FuZz9cIikpIHtcclxuXHRcdFx0XHR1c2VyLmRlbGV0ZVVzZXIodXNyKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fV0pOyIsImFuZ3VsYXIubW9kdWxlKFwibXlOZXR3b3JrLnVzZXIudmlld3Bvc3RzLmNvbnRyb2xsZXJcIiwgW10pXHJcblx0LmNvbnRyb2xsZXIoJ1ZpZXdVc2VyUG9zdHNDdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlUGFyYW1zJywgJyRzdGF0ZScsICdhdXRoJywgJ3Bvc3RzJywgJ3VzZXJQb3N0cycsICckd2luZG93JywgJ1JFR0VYUFMnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZVBhcmFtcywgJHN0YXRlLCBhdXRoLCBwb3N0cywgdXNlclBvc3RzLCAkd2luZG93LCByZWdleCl7XHJcblx0XHQkc2NvcGUuaXNMb2dnZWRJbiA9IGF1dGguaXNMb2dnZWRJbjtcclxuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IGF1dGguY3VycmVudFVzZXI7XHJcblx0XHQkc2NvcGUubG9nT3V0ID0gYXV0aC5sb2dPdXQ7XHJcblx0XHQkc2NvcGUuYWxscG9zdHMgPSB1c2VyUG9zdHM7XHJcblx0XHQkc2NvcGUudXNlcm5hbWUgPSAkc3RhdGVQYXJhbXMudXNlcm5hbWU7XHJcblx0XHQkc2NvcGUuY3VycmVudFBhZ2UgPSAxO1xyXG5cdFx0JHNjb3BlLnBvc3RzUGVyUGFnZSA9IDEwO1xyXG5cclxuXHRcdCRzY29wZS5lZGl0aW5nID0ge307XHJcblx0XHR2YXIgVkFMSURfTElOSyA9IHJlZ2V4LlZBTElEX0xJTktfTk9UX1JFUVVJUkVEX1BST1RPQ09MO1xyXG5cclxuXHRcdCRzY29wZS5saWtlX3VubGlrZSA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0aWYgKGF1dGguaXNMb2dnZWRJbigpKSB7XHJcblx0XHRcdFx0dmFyIHVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcblx0XHRcdFx0aWYgKHBvc3QudXNlcnNMaWtlZC5pbmRleE9mKHVzZXIpID09PSAtMSkge1xyXG5cdFx0XHRcdFx0cG9zdHMubGlrZShwb3N0KTtcclxuXHRcdFx0XHRcdHBvc3QudXNlcnNMaWtlZC5wdXNoKHVzZXIpO1xyXG5cdFx0XHRcdFx0cG9zdC5wb2ludHMrPTI7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHBvc3RzLnVubGlrZShwb3N0KTtcclxuXHRcdFx0XHRcdHZhciBpbmRleCA9IHBvc3QudXNlcnNMaWtlZC5pbmRleE9mKHVzZXIpO1xyXG5cdFx0XHRcdFx0cG9zdC51c2Vyc0xpa2VkLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdFx0XHRwb3N0LnBvaW50cy09MjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmRpc2xpa2VfdW5kaXNsaWtlID0gZnVuY3Rpb24ocG9zdCkge1xyXG5cdFx0XHRpZiAoYXV0aC5pc0xvZ2dlZEluKCkpIHtcclxuXHRcdFx0XHR2YXIgdXNlciA9IGF1dGguY3VycmVudFVzZXIoKTtcclxuXHRcdFx0XHRpZiAocG9zdC51c2Vyc0Rpc2xpa2VkLmluZGV4T2YodXNlcikgPT09IC0xKSB7XHJcblx0XHRcdFx0XHRwb3N0cy5kaXNsaWtlKHBvc3QpO1xyXG5cdFx0XHRcdFx0cG9zdC51c2Vyc0Rpc2xpa2VkLnB1c2godXNlcik7XHJcblx0XHRcdFx0XHRwb3N0LnBvaW50cy0tO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRwb3N0cy51bmRpc2xpa2UocG9zdCk7XHJcblx0XHRcdFx0XHR2YXIgaW5kZXggPSBwb3N0LnVzZXJzRGlzbGlrZWQuaW5kZXhPZih1c2VyKTtcclxuXHRcdFx0XHRcdHBvc3QudXNlcnNEaXNsaWtlZC5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0XHRcdFx0cG9zdC5wb2ludHMrKztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmxpa2VUb29sdGlwVGV4dCA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0aWYgKGF1dGguaXNMb2dnZWRJbigpKSB7XHJcblx0XHRcdFx0dmFyIHVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcblx0XHRcdFx0aWYgKHBvc3QudXNlcnNMaWtlZC5pbmRleE9mKHVzZXIpICE9PSAtMSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiQuG7jyB0aMOtY2hcIjtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiVGjDrWNoXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJldHVybiBcIkLhuqFuIGPhuqduIMSRxINuZyBuaOG6rXAhXCI7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmRpc2xpa2VUb29sdGlwVGV4dCA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0aWYgKGF1dGguaXNMb2dnZWRJbigpKSB7XHJcblx0XHRcdFx0dmFyIHVzZXIgPSBhdXRoLmN1cnJlbnRVc2VyKCk7XHJcblx0XHRcdFx0aWYgKHBvc3QudXNlcnNEaXNsaWtlZC5pbmRleE9mKHVzZXIpICE9PSAtMSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIFwiQuG7jyBraMO0bmcgdGjDrWNoXCI7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHJldHVybiBcIktow7RuZyB0aMOtY2hcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIFwiQuG6oW4gY+G6p24gxJHEg25nIG5o4bqtcCFcIjtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUuZWRpdCA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0JHNjb3BlLmVkaXRpbmcuY3VycmVudCA9IFtwb3N0LCB0cnVlXTtcclxuXHRcdFx0JHNjb3BlLnRpdGxlID0gJHNjb3BlLmVkaXRpbmcuY3VycmVudFswXS50aXRsZTtcclxuXHRcdFx0JHNjb3BlLmxpbmsgPSAkc2NvcGUuZWRpdGluZy5jdXJyZW50WzBdLmxpbms7XHJcblx0XHRcdCR3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XHJcblx0XHR9O1xyXG5cclxuXHRcdCRzY29wZS5zYXZlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICghJHNjb3BlLnRpdGxlICYmICEkc2NvcGUubGluaykge1xyXG5cdFx0XHRcdGlmICgkd2luZG93LmNvbmZpcm0oXCJC4bqhbiBjw7MgY2jhuq9jIGNo4bqvbiBtdeG7kW4geMOzYSBraMO0bmc/XCIpKSB7XHJcblx0XHRcdFx0XHRwb3N0cy5kZWxldGUoJHNjb3BlLmVkaXRpbmcuY3VycmVudFswXSk7XHJcblx0XHRcdFx0XHQkc2NvcGUuZWRpdGluZyA9IHt9O1xyXG5cdFx0XHRcdFx0JHNjb3BlLmVycm9yID0gJyc7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2UgaWYgKCEkc2NvcGUudGl0bGUpIHtcclxuXHRcdFx0XHQkc2NvcGUuZXJyb3IgPSAnQuG6oW4gY2jGsGEgbmjhuq1wIG7hu5lpIGR1bmchJztcclxuXHRcdFx0fSBlbHNlIGlmICgkc2NvcGUubGluayAmJiAhVkFMSURfTElOSy50ZXN0KCRzY29wZS5saW5rKSkge1xyXG5cdFx0XHRcdCRzY29wZS5lcnJvciA9ICdMaW5rIGtow7RuZyBo4bujcCBs4buHISc7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0dmFyIHVwZGF0ZWRQb3N0ID0ge1xyXG5cdFx0XHRcdFx0X2lkOiAkc2NvcGUuZWRpdGluZy5jdXJyZW50WzBdLl9pZCxcclxuXHRcdFx0XHRcdHRpdGxlOiAkc2NvcGUudGl0bGUsXHJcblx0XHRcdFx0XHRsaW5rOiAkc2NvcGUubGluayxcclxuXHRcdFx0XHRcdGRhdGU6IG5ldyBEYXRlKClcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHBvc3RzLnNhdmUodXBkYXRlZFBvc3QpO1xyXG5cdFx0XHRcdHZhciBpbmRleCA9ICRzY29wZS5hbGxwb3N0cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gaXRlbS5faWQ7XHJcblx0XHRcdFx0fSkuaW5kZXhPZigkc2NvcGUuZWRpdGluZy5jdXJyZW50WzBdLl9pZCk7XHJcblx0XHRcdFx0JHNjb3BlLmFsbHBvc3RzW2luZGV4XS50aXRsZSA9IHVwZGF0ZWRQb3N0LnRpdGxlO1xyXG5cdFx0XHRcdCRzY29wZS5hbGxwb3N0c1tpbmRleF0ubGluayA9IHVwZGF0ZWRQb3N0Lmxpbms7XHJcblx0XHRcdFx0JHNjb3BlLmFsbHBvc3RzW2luZGV4XS5kYXRlID0gdXBkYXRlZFBvc3QuZGF0ZTtcclxuXHRcdFx0XHQkc2NvcGUuZWRpdGluZyA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5lcnJvciA9ICcnO1xyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cdFx0fTtcclxuXHJcblx0XHQkc2NvcGUucmVzZXQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0JHNjb3BlLmVkaXRpbmcgPSB7fTtcclxuXHRcdH07XHJcblxyXG5cclxuXHRcdCRzY29wZS5kZWxldGUgPSBmdW5jdGlvbihwb3N0KSB7XHJcblx0XHRcdGlmICgkd2luZG93LmNvbmZpcm0oXCJDw7MgcGjhuqNpIGLhuqFuIG114buRbiB4w7NhIGLDoGkgdmnhur90IG7DoHk/XCIpKSB7XHJcblx0XHRcdFx0cG9zdHMuZGVsZXRlKHBvc3QpO1xyXG5cdFx0XHRcdHZhciBpbmRleCA9ICRzY29wZS5hbGxwb3N0cy5tYXAoZnVuY3Rpb24oaXRlbSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gaXRlbS5faWQ7XHJcblx0XHRcdFx0fSkuaW5kZXhPZihwb3N0Ll9pZCk7XHJcblx0XHRcdFx0JHNjb3BlLmFsbHBvc3RzLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdH1cdFx0XHRcclxuXHRcdH07XHJcblx0XHRcclxuXHR9XSk7IiwiYW5ndWxhci5tb2R1bGUoXCJteU5ldHdvcmsudXNlci5zZXJ2aWNlXCIsIFtdKVxyXG5cdC5mYWN0b3J5KCd1c2VyJywgWyckaHR0cCcsICdhdXRoJywgZnVuY3Rpb24oJGh0dHAsIGF1dGgpe1xyXG5cdFx0dmFyIHVzZXJTZXJ2aWNlID0ge1xyXG5cdFx0XHR1c2VyczogW10sXHJcblx0XHR9O1xyXG5cclxuXHRcdHVzZXJTZXJ2aWNlLmZpbmRVc2VyID0gZnVuY3Rpb24odXNyKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cCh7XHJcblx0XHRcdFx0bWV0aG9kOiAnR0VUJyxcclxuXHRcdFx0XHR1cmw6ICcvdXNlcnMvZmluZFVzZXIvJyArIHVzclxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdFx0dXNlclNlcnZpY2UuZ2V0QWxsVXNlciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAoe1xyXG5cdFx0XHRcdG1ldGhvZDogJ0dFVCcsXHJcblx0XHRcdFx0dXJsOiAnL3VzZXJzL2FsbCdcclxuXHRcdFx0fSkuc3VjY2VzcyhmdW5jdGlvbih1c2Vycyl7XHJcblx0XHRcdFx0YW5ndWxhci5jb3B5KHVzZXJzLCB1c2VyU2VydmljZS51c2Vycyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHR1c2VyU2VydmljZS5kZWxldGVVc2VyID0gZnVuY3Rpb24odXNyKSB7XHJcblx0XHRcdHZhciBpbmRleCA9IHVzZXJTZXJ2aWNlLnVzZXJzLm1hcChmdW5jdGlvbihpdGVtKXtcclxuXHRcdFx0XHRyZXR1cm4gaXRlbS51c2VybmFtZTtcclxuXHRcdFx0fSkuaW5kZXhPZih1c3IudXNlcm5hbWUpO1xyXG5cdFx0XHR1c2VyU2VydmljZS51c2Vycy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cclxuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZSgnL3VzZXJzL2RlbGV0ZS8nICsgdXNyLnVzZXJuYW1lLCBudWxsLCB7XHJcblx0XHRcdFx0aGVhZGVyczoge0F1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aC5nZXRUb2tlbigpfVxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cclxuXHRcdHJldHVybiB1c2VyU2VydmljZTtcclxuXHR9XSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9