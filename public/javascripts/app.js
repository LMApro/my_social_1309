angular.module("myNetwork",["ui.bootstrap","ui.router","angularUtils.directives.dirPagination","myNetwork.config.stateProvider","myNetwork.config.pusherProvider","myNetwork.constants","myNetwork.filters","myNetwork.auth.service","myNetwork.auth.controller","myNetwork.post.service","myNetwork.post.viewcomments.controller","myNetwork.home.viewposts.controller","myNetwork.home.nav.controller","myNetwork.user.service","myNetwork.user.viewposts.controller","myNetwork.user.find.controller"]),angular.module("myNetwork.auth.controller",[]).controller("AuthCtrl",["$scope","$state","auth","REGEXPS",function(e,t,n,r){e.user={},e.messages={};var s=r.VALID_USER,o=r.VALID_PASSWORD;e.register=function(){e.user.username?s.test(e.user.username)?e.user.password?o.test(e.user.password)?e.user.verifyPass?e.user.password!=e.user.verifyPass?e.messages.error="Mật khẩu chưa khớp!":n.register(e.user).error(function(t){e.messages=t}).then(function(){t.go("home")}):e.messages.error="Bạn chưa nhập lại mật khẩu!":e.messages.error="Mật khẩu cần ít nhất 8 kí tự!":e.messages.error="Bạn chưa nhập mật khẩu (ít nhất 8 kí tự)!":e.messages.error="Tên người dùng từ 5 đến 20 kí tự, không chứa khoảng trắng và kí tự đặc biệt (\\ / ` \" ' # ~)!":e.messages.error="Bạn chưa nhập Tên người dùng!"},e.logIn=function(){e.user.username||e.user.password?n.logIn(e.user).error(function(t){e.messages=t}).then(function(){t.go("home")}):e.messages.error="Bạn chưa nhập tên người dùng hoặc mật khẩu!"},e.changePassword=function(){e.user.username=n.currentUser(),e.user.currentPassword&&e.user.newPassword&&e.user.verifyNewPassword?o.test(e.user.newPassword)?e.user.newPassword!=e.user.verifyNewPassword?e.messages.error="Mật khẩu chưa khớp!":n.changePassword(e.user).error(function(t){e.messages=t}).then(function(){e.messages={},e.user={},e.messages.success="Đã cập nhật mật khẩu!"}):e.messages.error="Mật khẩu cần ít nhất 8 kí tự!":e.messages.error="Bạn chưa nhập tên người dùng hoặc mật khẩu!"}}]),angular.module("myNetwork.auth.service",[]).factory("auth",["$http","$window","$state",function(e,t,n){var r={};return r.saveToken=function(e){t.localStorage["my-social-token"]=e},r.getToken=function(){return t.localStorage["my-social-token"]},r.isLoggedIn=function(){var e=r.getToken();if(e){var n=JSON.parse(t.atob(e.split(".")[1]));return n.exp>Date.now()/1e3}return!1},r.currentUser=function(){if(r.isLoggedIn()){var e=r.getToken(),n=JSON.parse(t.atob(e.split(".")[1]));return n.username}},r.isAdmin=function(){if(r.isLoggedIn()){var e=r.getToken(),n=JSON.parse(t.atob(e.split(".")[1]));return n.isAdmin}},r.register=function(t){return e.post("/users/register",t).success(function(e){r.saveToken(e.token)})},r.logIn=function(t){return e.post("/users/login",t).success(function(e){r.saveToken(e.token)})},r.logOut=function(){t.localStorage.removeItem("my-social-token"),n.go("home")},r.changePassword=function(t){return e.put("/users/changePassword",t).success(function(e){r.saveToken(e.token)})},r}]),angular.module("myNetwork.config.pusherProvider",["doowb.angular-pusher"]).config(["PusherServiceProvider",function(e){e.setToken("864c814b8f54479e5d71").setOptions({})}]),angular.module("myNetwork.config.stateProvider",["ui.router"]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/home",templateUrl:"templates/home.html",controller:"ViewPostsCtrl",resolve:{postPromise:["posts",function(e){return e.getAll()}]}}).state("posts",{url:"/posts/{id}",templateUrl:"templates/posts.html",controller:"ViewCommentsCtrl",resolve:{post:["$stateParams","posts",function(e,t){return t.get(e.id)}]}}).state("login",{url:"/login",templateUrl:"templates/login.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}).state("register",{url:"/register",templateUrl:"templates/register.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}).state("user",{url:"/users/{username}",templateUrl:"templates/user.html",controller:"ViewUserPostsCtrl",onEnter:["$state","$stateParams",function(e,t){t.username||e.go("home")}],resolve:{userPosts:["posts","$stateParams",function(e,t){return e.getPostsByUser(t.username)}]}}).state("findUser",{url:"/findUser",templateUrl:"templates/findUser.html",controller:"FindUserCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}]}).state("listUser",{url:"/listUser",templateUrl:"templates/listUser.html",controller:"FindUserCtrl",resolve:{userPromise:["user",function(e){return e.getAllUser()}]},onEnter:["$state","auth",function(e,t){(!t.isLoggedIn()||t.isLoggedIn()&&!t.isAdmin())&&e.go("home")}]}).state("changePassword",{url:"/changePassword",templateUrl:"templates/changePassword.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}]}),t.otherwise("home")}]),angular.module("myNetwork.constants",[]).constant("REGEXPS",{VALID_LINK_REQUIRED_PROTOCOL:/^((https|http|ftp)\:\/\/)([w|W]{3}\.)?[a-zA-Z0-9\-\.]{3,}\.[a-zA-Z]{2,}(\.[a-zA-Z]{2,})?((\/[a-zA-Z0-9]*)+(\.[a-zA-Z0-9]{2,4}))?/,VALID_LINK_NOT_REQUIRED_PROTOCOL:/^((https|http|ftp)\:\/\/)?([w|W]{3}\.)?[a-zA-Z0-9\-\.]{3,}\.[a-zA-Z]{2,}(\.[a-zA-Z]{2,})?((\/[a-zA-Z0-9]*)+(\.[a-zA-Z0-9]{2,4}))?/,VALID_USER:/^[a-zA-Z0-9_\.]{5,20}$/,VALID_PASSWORD:/^.{8,}$/,VALID_EMAIL:/^[a-zA-Z]+[\.0-9_]+@[a-z0-9]+\.[a-z]{2,4}$/}),angular.module("myNetwork.filters",[]).filter("link",["REGEXPS",function(e){return function(t){var n=e.VALID_LINK_REQUIRED_PROTOCOL;return n.test(t)?t:"https://"+t}}]),angular.module("myNetwork.home.viewposts.controller",[]).controller("ViewPostsCtrl",["$scope","$window","posts","auth","REGEXPS","Pusher",function(e,t,n,r,s,o){e.isLoggedIn=r.isLoggedIn,e.currentUser=r.currentUser,e.logOut=r.logOut,e.isAdmin=r.isAdmin,e.allposts=n.posts,e.sortOrder="-date",e.sortOptions=[{name:"Mới nhất",order:"-date"},{name:"Nhiều like nhất",order:"-usersLiked.length"},{name:"Nhiều bình luận nhất",order:"-comments.length"}],e.postsPerPage=10,e.currentPage=1,e.error="",e.editing={},e.currentLike=!1;var i=s.VALID_LINK_NOT_REQUIRED_PROTOCOL;e.setOrder=function(t){e.sortOrder=t},e.addPost=function(){e.newtitle?e.newlink&&!i.test(e.newlink)?e.error="Link không hợp lệ!":(n.create({title:e.newtitle,link:e.newlink,date:new Date}),e.newtitle="",e.newlink="",e.error=""):e.error="Bạn chưa nhập nội dung!"},e.moveToTop=function(){t.scrollTo(0,0)},e.like_unlike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersLiked.indexOf(t))n.like(e),e.usersLiked.push(t),e.points+=2;else{n.unlike(e);var s=e.usersLiked.indexOf(t);e.usersLiked.splice(s,1),e.points-=2}}},e.dislike_undislike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersDisliked.indexOf(t))n.dislike(e),e.usersDisliked.push(t),e.points--;else{n.undislike(e);var s=e.usersDisliked.indexOf(t);e.usersDisliked.splice(s,1),e.points++}}},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Đăng nhập để thích bài viết!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Đăng nhập để không thích bài viết!"},e.edit=function(t){e.editing.current=[t,!0],e.title=e.editing.current[0].title,e.link=e.editing.current[0].link,e.moveToTop()},e.save=function(){if(e.title||e.link)if(e.title)if(e.link&&!i.test(e.link))e.error="Link không hợp lệ!";else{var r={_id:e.editing.current[0]._id,title:e.title,link:e.link,date:new Date};n.save(r),e.editing={},e.error=""}else e.error="Bạn chưa nhập nội dung!";else t.confirm("Có phải bạn muốn xóa bài viết này?")&&(n["delete"](e.editing.current[0]),e.editing={},e.error="")},e.reset=function(){e.editing={}},e["delete"]=function(e){t.confirm("Bạn có chắc chắn muốn xóa không?")&&n["delete"](e)}}]),angular.module("myNetwork.home.nav.controller",[]).controller("NavCtrl",["$scope","auth",function(e,t){e.isLoggedIn=t.isLoggedIn,e.currentUser=t.currentUser,e.logOut=t.logOut}]),angular.module("myNetwork.post.viewcomments.controller",[]).controller("ViewCommentsCtrl",["$scope","posts","post","auth","$window","Pusher",function(e,t,n,r,s,o){e.post=n,e.error="",e.button={name:"Comment"},e.currentComment={},e.currentUser=r.currentUser,e.currentPage=1,e.isLoggedIn=r.isLoggedIn,e.isAdmin=r.isAdmin,o.subscribe("comments","addComment",function(t){e.post.comments.splice(0,0,t)}),o.subscribe("comments","deleteComment",function(t){var n=e.post.comments.map(function(e){return e._id}).indexOf(t.comment);e.post.comments.splice(n,1)}),e.addComment=function(){e.body?(t.addComment(n._id,{body:e.body,date:new Date}),e.error=null):e.error="Bạn chưa nhập nội dung bình luận!",e.body=""},e.like_unlikeComment=function(e,n){var s=r.currentUser();if(-1===n.usersLiked.indexOf(s))t.likeComment(e,n),n.usersLiked.push(s);else{t.unlikeComment(e,n);var o=n.usersLiked.indexOf(s);n.usersLiked.splice(o,1)}},e.dislike_undislikeComment=function(e,n){var s=r.currentUser();if(-1===n.usersDisliked.indexOf(s))t.dislikeComment(e,n),n.usersDisliked.push(s);else{t.undislikeComment(e,n);var o=n.usersDisliked.indexOf(s);n.usersDisliked.splice(o,1)}},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Đăng nhập để thích bình luận!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Đăng nhập để không thích bình luận!"},e.deleteComment=function(e,n){s.confirm("Bạn có chắc chắn muốn xóa không?")&&t.deleteComment(e,n)},e.editComment=function(t,n){e.button.name="Save",e.body=n.body,e.currentComment=n;var r=angular.element(document.body.scrollHeight).toString(),o=parseInt(r.substr(1,r.length-2));s.scrollTo(0,o),document.querySelector("#commentInput").select()},e.save=function(n,r){e.body?t.saveComment(n,{_id:e.currentComment._id,body:e.body,date:new Date}):s.confirm("Bạn có chắc chắn muốn xóa không?")&&t.deleteComment(n,e.currentComment),e.button.name="Comment",e.body=""},e.reset=function(){e.body="",e.button.name="Comment"},e.moveToTop=function(){s.scrollTo(0,0)}}]),angular.module("myNetwork.post.service",[]).factory("posts",["$http","auth","Pusher",function(e,t,n){var r={posts:[]};return n.subscribe("posts","addPost",function(e){r.posts.splice(0,0,e)}),n.subscribe("posts","deletePost",function(e){var t=r.getAllPostIds().indexOf(e.post);r.posts.splice(t,1)}),r.getAll=function(){return e.get("/posts").success(function(e){angular.copy(e,r.posts)})},r.getPostsByUser=function(t){return e.get("/posts/user/"+t).then(function(e){return e.data})},r.getAllPostIds=function(){return r.posts.map(function(e){return e._id})},r.create=function(n){return e.post("/posts",n,{headers:{Authorization:"Bearer "+t.getToken()}})},r.get=function(t){return e.get("/posts/"+t).then(function(e){return e.data})},r.addComment=function(n,r){return e.post("/posts/"+n+"/comments",r,{headers:{Authorization:"Bearer "+t.getToken()}})},r.like=function(n){return e.put("/posts/"+n._id+"/like",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.unlike=function(n){return e.put("/posts/"+n._id+"/unlike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.dislike=function(n){return e.put("/posts/"+n._id+"/dislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.undislike=function(n){return e.put("/posts/"+n._id+"/undislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.save=function(n){return e.put("/posts/"+n._id+"/save",n,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){var t=r.getAllPostIds().indexOf(e._id);r.posts[t]=e})},r.saveComment=function(n,s){return e.put("/posts/"+n._id+"/comments/"+s._id+"/save",s,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){var t=(r.getAllPostIds().indexOf(n._id),n.comments.map(function(e){return e._id}).indexOf(e._id));n.comments[t]=e})},r["delete"]=function(n){return e["delete"]("/posts/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.deleteComment=function(n,r){return e["delete"]("/posts/"+n._id+"/comments/"+r._id,null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.likeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/like",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.unlikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/unlike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.dislikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/dislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.undislikeComment=function(n,r){return e.put("/posts/"+n._id+"/comments/"+r._id+"/undislike",null,{headers:{Authorization:"Bearer "+t.getToken()}})},r}]),angular.module("myNetwork.user.find.controller",[]).controller("FindUserCtrl",["$scope","user","$state","$window",function(e,t,n,r){e.users=t.users,e.messages={},e.findUser=function(e){return t.findUser(e).then(function(e){return e.data.map(function(e){return e.username})})},e["goto"]=function(t){t?n.go("user",{username:t}):e.messages.error="Bạn chưa nhập tên người dùng cần tìm!"},e.deleteUser=function(e){r.confirm("Bạn có chắc chắn muốn xóa người dùng này ra khỏi hệ thống?")&&t.deleteUser(e)}}]),angular.module("myNetwork.user.viewposts.controller",[]).controller("ViewUserPostsCtrl",["$scope","$stateParams","$state","auth","posts","userPosts","$window","REGEXPS",function(e,t,n,r,s,o,i,u){e.isLoggedIn=r.isLoggedIn,e.currentUser=r.currentUser,e.logOut=r.logOut,e.allposts=o,e.username=t.username,e.currentPage=1,e.postsPerPage=10,e.editing={};var l=u.VALID_LINK_NOT_REQUIRED_PROTOCOL;e.like_unlike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersLiked.indexOf(t))s.like(e),e.usersLiked.push(t),e.points+=2;else{s.unlike(e);var n=e.usersLiked.indexOf(t);e.usersLiked.splice(n,1),e.points-=2}}},e.dislike_undislike=function(e){if(r.isLoggedIn()){var t=r.currentUser();if(-1===e.usersDisliked.indexOf(t))s.dislike(e),e.usersDisliked.push(t),e.points--;else{s.undislike(e);var n=e.usersDisliked.indexOf(t);e.usersDisliked.splice(n,1),e.points++}}},e.likeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersLiked.indexOf(t)?"Bỏ thích":"Thích"}return"Bạn cần đăng nhập!"},e.dislikeTooltipText=function(e){if(r.isLoggedIn()){var t=r.currentUser();return-1!==e.usersDisliked.indexOf(t)?"Bỏ không thích":"Không thích"}return"Bạn cần đăng nhập!"},e.edit=function(t){e.editing.current=[t,!0],e.title=e.editing.current[0].title,e.link=e.editing.current[0].link,i.scrollTo(0,0)},e.save=function(){if(e.title||e.link)if(e.title)if(e.link&&!l.test(e.link))e.error="Link không hợp lệ!";else{var t={_id:e.editing.current[0]._id,title:e.title,link:e.link,date:new Date};s.save(t);var n=e.allposts.map(function(e){return e._id}).indexOf(e.editing.current[0]._id);e.allposts[n].title=t.title,e.allposts[n].link=t.link,e.allposts[n].date=t.date,e.editing={},e.error=""}else e.error="Bạn chưa nhập nội dung!";else i.confirm("Bạn có chắc chắn muốn xóa không?")&&(s["delete"](e.editing.current[0]),e.editing={},e.error="")},e.reset=function(){e.editing={}},e["delete"]=function(t){if(i.confirm("Có phải bạn muốn xóa bài viết này?")){s["delete"](t);var n=e.allposts.map(function(e){return e._id}).indexOf(t._id);e.allposts.splice(n,1)}}}]),angular.module("myNetwork.user.service",[]).factory("user",["$http","auth",function(e,t){var n={users:[]};return n.findUser=function(t){return e({method:"GET",url:"/users/findUser/"+t})},n.getAllUser=function(){return e({method:"GET",url:"/users/all"}).success(function(e){angular.copy(e,n.users)})},n.deleteUser=function(r){var s=n.users.map(function(e){return e.username}).indexOf(r.username);return n.users.splice(s,1),e["delete"]("/users/delete/"+r.username,null,{headers:{Authorization:"Bearer "+t.getToken()}})},n}]);
//# sourceMappingURL=data:application/json;base64,